

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jun  1 03:46:49 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           	psect	idataCOMRAM
    19  007F31                     __pidataCOMRAM:
    20                           	opt stack 0
    21                           
    22                           ;initializer for _msm
    23  007F31  45                 	db	69
    24  007F32  53                 	db	83
    25  007F33  43                 	db	67
    26  007F34  52                 	db	82
    27  007F35  49                 	db	73
    28  007F36  42                 	db	66
    29  007F37  41                 	db	65
    30  007F38  20                 	db	32
    31  007F39  55                 	db	85
    32  007F3A  4E                 	db	78
    33  007F3B  20                 	db	32
    34  007F3C  4D                 	db	77
    35  007F3D  53                 	db	83
    36  007F3E  4D                 	db	77
    37  007F3F  20                 	db	32
    38  007F40  0D                 	db	13
    39  007F41  00                 	db	0
    40  0000                     _ADCON0bits	set	4034
    41  0000                     _ADCON1	set	4033
    42  0000                     _ADCON2bits	set	4032
    43  0000                     _ADRESH	set	4036
    44  0000                     _ADRESL	set	4035
    45  0000                     _BAUDCONbits	set	4024
    46  0000                     _OSCCONbits	set	4051
    47  0000                     _PIR1bits	set	3998
    48  0000                     _PORTBbits	set	3969
    49  0000                     _PORTC	set	3970
    50  0000                     _PORTD	set	3971
    51  0000                     _PORTDbits	set	3971
    52  0000                     _RCREG	set	4014
    53  0000                     _RCSTAbits	set	4011
    54  0000                     _SPBRG	set	4015
    55  0000                     _SPBRGH	set	4016
    56  0000                     _SSPBUF	set	4041
    57  0000                     _SSPCON1bits	set	4038
    58  0000                     _SSPSTATbits	set	4039
    59  0000                     _TRISAbits	set	3986
    60  0000                     _TRISB	set	3987
    61  0000                     _TRISC	set	3988
    62  0000                     _TRISCbits	set	3988
    63  0000                     _TRISD	set	3989
    64  0000                     _TXREG	set	4013
    65  0000                     _TXSTAbits	set	4012
    66                           
    67                           ; #config settings
    68  0000                     
    69                           	psect	cinit
    70  007F88                     __pcinit:
    71                           	opt stack 0
    72  007F88                     start_initialization:
    73                           	opt stack 0
    74  007F88                     __initialization:
    75                           	opt stack 0
    76                           
    77                           ; Clear objects allocated to COMRAM (27 bytes)
    78  007F88  EE00  F001         	lfsr	0,__pbssCOMRAM
    79  007F8C  0E1B               	movlw	27
    80  007F8E                     clear_0:
    81  007F8E  6AEE               	clrf	postinc0,c
    82  007F90  06E8               	decf	wreg,f,c
    83  007F92  E1FD               	bnz	clear_0
    84                           
    85                           ; Initialize objects allocated to COMRAM (17 bytes)
    86                           ; load TBLPTR registers with __pidataCOMRAM
    87  007F94  0E31               	movlw	low __pidataCOMRAM
    88  007F96  6EF6               	movwf	tblptrl,c
    89  007F98  0E7F               	movlw	high __pidataCOMRAM
    90  007F9A  6EF7               	movwf	tblptrh,c
    91  007F9C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    92  007F9E  6EF8               	movwf	tblptru,c
    93  007FA0  EE00  F01C         	lfsr	0,__pdataCOMRAM
    94  007FA4  EE10 F011          	lfsr	1,17
    95  007FA8                     copy_data0:
    96  007FA8  0009               	tblrd		*+
    97  007FAA  CFF5 FFEE          	movff	tablat,postinc0
    98  007FAE  50E5               	movf	postdec1,w,c
    99  007FB0  50E1               	movf	fsr1l,w,c
   100  007FB2  E1FA               	bnz	copy_data0
   101  007FB4                     end_of_initialization:
   102                           	opt stack 0
   103  007FB4                     __end_of__initialization:
   104                           	opt stack 0
   105  007FB4  0100               	movlb	0
   106  007FB6  EFDD  F03F         	goto	_main	;jump to C main() function
   107                           tblptru	equ	0xFF8
   108                           tblptrh	equ	0xFF7
   109                           tblptrl	equ	0xFF6
   110                           tablat	equ	0xFF5
   111                           postinc0	equ	0xFEE
   112                           wreg	equ	0xFE8
   113                           postdec1	equ	0xFE5
   114                           fsr1l	equ	0xFE1
   115                           
   116                           	psect	bssCOMRAM
   117  000001                     __pbssCOMRAM:
   118                           	opt stack 0
   119  000001                     _buffer:
   120                           	opt stack 0
   121  000001                     	ds	2
   122  000003                     read_msm@buffer:
   123                           	opt stack 0
   124  000003                     	ds	25
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           wreg	equ	0xFE8
   131                           postdec1	equ	0xFE5
   132                           fsr1l	equ	0xFE1
   133                           
   134                           	psect	dataCOMRAM
   135  00001C                     __pdataCOMRAM:
   136                           	opt stack 0
   137  00001C                     _msm:
   138                           	opt stack 0
   139  00001C                     	ds	17
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           postinc0	equ	0xFEE
   145                           wreg	equ	0xFE8
   146                           postdec1	equ	0xFE5
   147                           fsr1l	equ	0xFE1
   148                           
   149                           	psect	cstackCOMRAM
   150  00002D                     __pcstackCOMRAM:
   151                           	opt stack 0
   152  00002D                     send_spi@data:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0x0
   156  00002D                     	ds	1
   157  00002E                     send_mcp@x:
   158                           	opt stack 0
   159                           
   160                           ; 2 bytes @ 0x1
   161  00002E                     	ds	2
   162  000030                     send_mcp@a:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x3
   166  000030                     	ds	1
   167  000031                     send_mcp@b:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0x4
   171  000031                     	ds	1
   172  000032                     ??_main:
   173                           
   174                           ; 0 bytes @ 0x5
   175  000032                     	ds	1
   176  000033                     main@t:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x6
   180  000033                     	ds	1
   181  000034                     main@a:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x7
   185  000034                     	ds	2
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195 ;;
   196 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   197 ;;
   198 ;; *************** function _main *****************
   199 ;; Defined at:
   200 ;;		line 35 in file "main.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;		None
   203 ;; Auto vars:     Size  Location     Type
   204 ;;  a               2    7[COMRAM] unsigned int 
   205 ;;  t               1    6[COMRAM] unsigned char 
   206 ;; Return value:  Size  Location     Type
   207 ;;		None               void
   208 ;; Registers used:
   209 ;;		wreg, status,2, status,0, cstack
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   215 ;;      Params:         0       0       0       0       0       0       0       0       0
   216 ;;      Locals:         3       0       0       0       0       0       0       0       0
   217 ;;      Temps:          1       0       0       0       0       0       0       0       0
   218 ;;      Totals:         4       0       0       0       0       0       0       0       0
   219 ;;Total ram usage:        4 bytes
   220 ;; Hardware stack levels required when called:    2
   221 ;; This function calls:
   222 ;;		_send_mcp
   223 ;;		_set_port
   224 ;;		_set_spi
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231  007FBA                     __ptext0:
   232                           	opt stack 0
   233  007FBA                     _main:
   234                           	opt stack 29
   235                           
   236                           ;main.c: 36: u16 a;
   237                           ;main.c: 37: u8 t=64;
   238                           
   239                           ;incstack = 0
   240  007FBA  0E40               	movlw	64
   241  007FBC  6E33               	movwf	main@t,c
   242                           
   243                           ;main.c: 38: OSCCONbits.IRCF=7;
   244  007FBE  88D3               	bsf	4051,4,c	;volatile
   245  007FC0  8AD3               	bsf	4051,5,c	;volatile
   246  007FC2  8CD3               	bsf	4051,6,c	;volatile
   247                           
   248                           ;main.c: 40: set_port();
   249  007FC4  EC91  F03F         	call	_set_port	;wreg free
   250                           
   251                           ;main.c: 43: set_spi();
   252  007FC8  ECA1  F03F         	call	_set_spi	;wreg free
   253  007FCC                     l934:
   254                           
   255                           ;main.c: 46: send_mcp(a++);
   256  007FCC  C034  F02E         	movff	main@a,send_mcp@x
   257  007FD0  C035  F02F         	movff	main@a+1,send_mcp@x+1
   258  007FD4  ECAC  F03F         	call	_send_mcp	;wreg free
   259  007FD8  4A34               	infsnz	main@a,f,c
   260  007FDA  2A35               	incf	main@a+1,f,c
   261                           
   262                           ;main.c: 47: if(a>=4100)
   263  007FDC  0E04               	movlw	4
   264  007FDE  5C34               	subwf	main@a,w,c
   265  007FE0  0E10               	movlw	16
   266  007FE2  5835               	subwfb	main@a+1,w,c
   267  007FE4  A0D8               	btfss	status,0,c
   268  007FE6  D004               	goto	l942
   269                           
   270                           ;main.c: 48: a=0;
   271  007FE8  0E00               	movlw	0
   272  007FEA  6E35               	movwf	main@a+1,c
   273  007FEC  0E00               	movlw	0
   274  007FEE  6E34               	movwf	main@a,c
   275  007FF0                     l942:
   276                           
   277                           ;main.c: 49: _delay((unsigned long)((1)*(8000000/4000.0)));
   278  007FF0  0E03               	movlw	3
   279  007FF2  6E32               	movwf	??_main& (0+255),c
   280  007FF4  0E98               	movlw	152
   281  007FF6                     u107:
   282  007FF6  2EE8               	decfsz	wreg,f,c
   283  007FF8  D7FE               	goto	u107
   284  007FFA  2E32               	decfsz	??_main& (0+255),f,c
   285  007FFC  D7FC               	goto	u107
   286  007FFE  D7E6               	goto	l934
   287  008000                     __end_of_main:
   288                           	opt stack 0
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           status	equ	0xFD8
   298                           
   299 ;; *************** function _set_spi *****************
   300 ;; Defined at:
   301 ;;		line 12 in file "SPI.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;		None               void
   308 ;; Registers used:
   309 ;;		wreg, status,2
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text1
   329  007F42                     __ptext1:
   330                           	opt stack 0
   331  007F42                     _set_spi:
   332                           	opt stack 30
   333                           
   334                           ;SPI.c: 13: SSPSTATbits.SMP=0;
   335                           
   336                           ;incstack = 0
   337  007F42  9EC7               	bcf	4039,7,c	;volatile
   338                           
   339                           ;SPI.c: 14: SSPSTATbits.CKE=0;
   340  007F44  9CC7               	bcf	4039,6,c	;volatile
   341                           
   342                           ;SPI.c: 15: SSPCON1bits.CKP=0;
   343  007F46  98C6               	bcf	4038,4,c	;volatile
   344                           
   345                           ;SPI.c: 16: SSPCON1bits.SSPM=1;
   346  007F48  50C6               	movf	4038,w,c	;volatile
   347  007F4A  0BF0               	andlw	-16
   348  007F4C  0901               	iorlw	1
   349  007F4E  6EC6               	movwf	4038,c	;volatile
   350                           
   351                           ;SPI.c: 17: TRISC=0X00;
   352  007F50  0E00               	movlw	0
   353  007F52  6E94               	movwf	3988,c	;volatile
   354                           
   355                           ;SPI.c: 18: SSPCON1bits.SSPEN=1;
   356  007F54  8AC6               	bsf	4038,5,c	;volatile
   357  007F56  0012               	return		;funcret
   358  007F58                     __end_of_set_spi:
   359                           	opt stack 0
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec1	equ	0xFE5
   367                           fsr1l	equ	0xFE1
   368                           status	equ	0xFD8
   369                           
   370 ;; *************** function _set_port *****************
   371 ;; Defined at:
   372 ;;		line 17 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;		None               void
   379 ;; Registers used:
   380 ;;		wreg, status,2
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         0       0       0       0       0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0
   389 ;;      Totals:         0       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text2
   400  007F22                     __ptext2:
   401                           	opt stack 0
   402  007F22                     _set_port:
   403                           	opt stack 30
   404                           
   405                           ;main.c: 19: TRISD=0;
   406                           
   407                           ;incstack = 0
   408  007F22  0E00               	movlw	0
   409  007F24  6E95               	movwf	3989,c	;volatile
   410                           
   411                           ;main.c: 20: TRISB=0;
   412  007F26  0E00               	movlw	0
   413  007F28  6E93               	movwf	3987,c	;volatile
   414                           
   415                           ;main.c: 21: PORTC=255;
   416  007F2A  6882               	setf	3970,c	;volatile
   417                           
   418                           ;main.c: 22: PORTD=255;
   419  007F2C  6883               	setf	3971,c	;volatile
   420  007F2E  0012               	return		;funcret
   421  007F30                     __end_of_set_port:
   422                           	opt stack 0
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1l	equ	0xFE1
   431                           status	equ	0xFD8
   432                           
   433 ;; *************** function _send_mcp *****************
   434 ;; Defined at:
   435 ;;		line 29 in file "SPI.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  x               2    1[COMRAM] unsigned int 
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  b               1    4[COMRAM] unsigned char 
   440 ;;  a               1    3[COMRAM] unsigned char 
   441 ;; Return value:  Size  Location     Type
   442 ;;		None               void
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   450 ;;      Params:         2       0       0       0       0       0       0       0       0
   451 ;;      Locals:         2       0       0       0       0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0       0
   453 ;;      Totals:         4       0       0       0       0       0       0       0       0
   454 ;;Total ram usage:        4 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; Hardware stack levels required when called:    1
   457 ;; This function calls:
   458 ;;		_send_spi
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text3
   465  007F58                     __ptext3:
   466                           	opt stack 0
   467  007F58                     _send_mcp:
   468                           	opt stack 29
   469                           
   470                           ;SPI.c: 30: unsigned char a=x;
   471                           
   472                           ;incstack = 0
   473  007F58  C02E  F030         	movff	send_mcp@x,send_mcp@a
   474                           
   475                           ;SPI.c: 31: x>>=8;
   476  007F5C  502F               	movf	send_mcp@x+1,w,c
   477  007F5E  6E2E               	movwf	send_mcp@x,c
   478  007F60  6A2F               	clrf	send_mcp@x+1,c
   479                           
   480                           ;SPI.c: 32: unsigned char b=0x10 | x;
   481  007F62  502E               	movf	send_mcp@x,w,c
   482  007F64  0910               	iorlw	16
   483  007F66  6E31               	movwf	send_mcp@b,c
   484                           
   485                           ;SPI.c: 33: PORTDbits.RD0=0;
   486  007F68  9083               	bcf	3971,0,c	;volatile
   487                           
   488                           ;SPI.c: 34: PORTBbits.RB4=1;
   489  007F6A  8881               	bsf	3969,4,c	;volatile
   490                           
   491                           ;SPI.c: 35: send_spi(b);
   492  007F6C  5031               	movf	send_mcp@b,w,c
   493  007F6E  EC8A  F03F         	call	_send_spi
   494                           
   495                           ;SPI.c: 36: send_spi(a);
   496  007F72  5030               	movf	send_mcp@a,w,c
   497  007F74  EC8A  F03F         	call	_send_spi
   498                           
   499                           ;SPI.c: 37: _delay((unsigned long)((2)*(8000000/4000000.0)));
   500  007F78  D000               	nop2		;2 cycle nop
   501  007F7A  D000               	nop2		;2 cycle nop
   502                           
   503                           ;SPI.c: 38: PORTBbits.RB4=0;
   504  007F7C  9881               	bcf	3969,4,c	;volatile
   505                           
   506                           ;SPI.c: 39: _delay((unsigned long)((2)*(8000000/4000000.0)));
   507  007F7E  D000               	nop2		;2 cycle nop
   508  007F80  D000               	nop2		;2 cycle nop
   509                           
   510                           ;SPI.c: 40: PORTBbits.RB4=1;
   511  007F82  8881               	bsf	3969,4,c	;volatile
   512                           
   513                           ;SPI.c: 41: PORTDbits.RD0=1;
   514  007F84  8083               	bsf	3971,0,c	;volatile
   515  007F86  0012               	return		;funcret
   516  007F88                     __end_of_send_mcp:
   517                           	opt stack 0
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           status	equ	0xFD8
   527                           
   528 ;; *************** function _send_spi *****************
   529 ;; Defined at:
   530 ;;		line 22 in file "SPI.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  data            1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  data            1    0[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   544 ;;      Params:         0       0       0       0       0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0
   547 ;;      Totals:         1       0       0       0       0       0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_send_mcp
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text4
   558  007F14                     __ptext4:
   559                           	opt stack 0
   560  007F14                     _send_spi:
   561                           	opt stack 29
   562                           
   563                           ;incstack = 0
   564                           ;send_spi@data stored from wreg
   565  007F14  6E2D               	movwf	send_spi@data,c
   566                           
   567                           ;SPI.c: 24: SSPBUF = data;
   568  007F16  C02D  FFC9         	movff	send_spi@data,4041	;volatile
   569  007F1A                     l138:
   570  007F1A  A0C7               	btfss	4039,0,c	;volatile
   571  007F1C  D7FE               	goto	l138
   572                           
   573                           ;SPI.c: 26: return SSPBUF;
   574                           ;	Return value of _send_spi is never used
   575  007F1E  50C9               	movf	4041,w,c	;volatile
   576  007F20  0012               	return		;funcret
   577  007F22                     __end_of_send_spi:
   578                           	opt stack 0
   579  0000                     tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           postdec1	equ	0xFE5
   586                           fsr1l	equ	0xFE1
   587                           status	equ	0xFD8
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           postinc0	equ	0xFEE
   593                           wreg	equ	0xFE8
   594                           postdec1	equ	0xFE5
   595                           fsr1l	equ	0xFE1
   596                           status	equ	0xFD8
   597                           
   598                           	psect	rparam
   599  0000                     tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1l	equ	0xFE1
   607                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    buffer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__read_msm	PTR unsigned char  size(2) Largest target is 25
		 -> read_msm@buffer(COMRAM[25]), 


Critical Paths under _main in COMRAM

    _main->_send_mcp
    _send_mcp->_send_spi

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     217
                                              5 COMRAM     4     4      0
                           _send_mcp
                           _set_port
                            _set_spi
 ---------------------------------------------------------------------------------
 (1) _set_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_mcp                                             4     2      2     170
                                              1 COMRAM     4     2      2
                           _send_spi
 ---------------------------------------------------------------------------------
 (2) _send_spi                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send_mcp
     _send_spi
   _set_port
   _set_spi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      35       1       55.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      20        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jun  1 03:46:49 2017

            _SSPSTATbits 000FC7              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l138 7F1A  
                    l942 7FF0                      l934 7FCC             __CFG_CPB$OFF 000000  
                    u107 7FF6             __CFG_CPD$OFF 000000                      _msm 001C  
                    wreg 000FE8             __CFG_WDT$OFF 000000                     _main 7FBA  
                   fsr1l 000FE1                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000010            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 002D                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTC 000F82                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    main@a 0034                    main@t 0033  
                  tablat 000FF5          __end_of_set_spi 7F58                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 7F88  
           __end_of_main 8000                   ??_main 0032            __activetblptr 000000  
                 _ADCON1 000FC1                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _SPBRGH 000FB0                   _SSPBUF 000FC9           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   _buffer 0001                   clear_0 7F8E  
       __end_of_send_mcp 7F88         __end_of_send_spi 7F22             __pdataCOMRAM 001C  
       __end_of_set_port 7F30                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_set_spi 002D               __accesstop 0060  
__end_of__initialization 7FB4            ___rparam_used 000001           __pcstackCOMRAM 002D  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                ?_send_mcp 002E  
              ?_send_spi 002D                  __Lparam 0000                ?_set_port 002D  
                __pcinit 7F88                  __ramtop 0800                  __ptext0 7FBA  
                __ptext1 7F42                  __ptext2 7F22                  __ptext3 7F58  
                __ptext4 7F14                  _set_spi 7F42     end_of_initialization 7FB4  
             ??_send_mcp 0030               ??_send_spi 002D               ??_set_port 002D  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
              _PORTBbits 000F81                _PORTDbits 000F83                _TRISAbits 000F92  
              _TRISCbits 000F94                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
          __pidataCOMRAM 7F31      start_initialization 7F88         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0001        __size_of_send_mcp 0030        __size_of_send_spi 000E  
      __size_of_set_port 000E                 ?_set_spi 002D                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
              copy_data0 7FA8             send_spi@data 002D                 __Hrparam 0000  
               __Lrparam 0000         __size_of_set_spi 0016                send_mcp@a 0030  
              send_mcp@b 0031                send_mcp@x 002E            __size_of_main 0046  
               _send_mcp 7F58                 _send_spi 7F14                 _set_port 7F22  
  __CFG_CPUDIV$OSC1_PLL2 000000               _OSCCONbits 000FD3           read_msm@buffer 0003  
    __CFG_FOSC$INTOSC_EC 000000              _SSPCON1bits 000FC6  
