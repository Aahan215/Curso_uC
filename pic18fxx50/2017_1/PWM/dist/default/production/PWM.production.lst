

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu May 25 16:51:51 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    18  0000                     _CCP1CON	set	4029
    19  0000                     _CCP2CON	set	4026
    20  0000                     _CCPR1L	set	4030
    21  0000                     _CCPR2L	set	4027
    22  0000                     _OSCCONbits	set	4051
    23  0000                     _PORTC	set	3970
    24  0000                     _PORTD	set	3971
    25  0000                     _PR2	set	4043
    26  0000                     _T2CONbits	set	4042
    27  0000                     _TMR2	set	4044
    28  0000                     _TRISB	set	3987
    29  0000                     _TRISCbits	set	3988
    30  0000                     _TRISD	set	3989
    31                           
    32                           ; #config settings
    33  0000                     
    34                           	psect	cinit
    35  007D5E                     __pcinit:
    36                           	opt stack 0
    37  007D5E                     start_initialization:
    38                           	opt stack 0
    39  007D5E                     __initialization:
    40                           	opt stack 0
    41  007D5E                     end_of_initialization:
    42                           	opt stack 0
    43  007D5E                     __end_of__initialization:
    44                           	opt stack 0
    45  007D5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
    46  007D60  6EF8               	movwf	tblptru,c
    47  007D62  0100               	movlb	0
    48  007D64  EF1B  F03F         	goto	_main	;jump to C main() function
    49                           tblptru	equ	0xFF8
    50                           
    51                           	psect	cstackCOMRAM
    52  000001                     __pcstackCOMRAM:
    53                           	opt stack 0
    54  000001                     ?___aldiv:
    55                           	opt stack 0
    56  000001                     set_pin@st:
    57                           	opt stack 0
    58  000001                     set_duty@duty:
    59                           	opt stack 0
    60  000001                     ___aldiv@dividend:
    61                           	opt stack 0
    62                           
    63                           ; 4 bytes @ 0x0
    64  000001                     	ds	1
    65  000002                     set_pin@modulo:
    66                           	opt stack 0
    67                           
    68                           ; 1 bytes @ 0x1
    69  000002                     	ds	1
    70  000003                     ??_set_duty:
    71                           
    72                           ; 0 bytes @ 0x2
    73  000003                     	ds	2
    74  000005                     set_duty@modulo:
    75                           	opt stack 0
    76  000005                     ___aldiv@divisor:
    77                           	opt stack 0
    78                           
    79                           ; 4 bytes @ 0x4
    80  000005                     	ds	1
    81  000006                     set_duty@msb:
    82                           	opt stack 0
    83                           
    84                           ; 1 bytes @ 0x5
    85  000006                     	ds	1
    86  000007                     set_duty@lsb:
    87                           	opt stack 0
    88                           
    89                           ; 1 bytes @ 0x6
    90  000007                     	ds	2
    91  000009                     ___aldiv@counter:
    92                           	opt stack 0
    93                           
    94                           ; 1 bytes @ 0x8
    95  000009                     	ds	1
    96  00000A                     ___aldiv@sign:
    97                           	opt stack 0
    98                           
    99                           ; 1 bytes @ 0x9
   100  00000A                     	ds	1
   101  00000B                     ___aldiv@quotient:
   102                           	opt stack 0
   103                           
   104                           ; 4 bytes @ 0xA
   105  00000B                     	ds	4
   106  00000F                     set_frecuencia@p:
   107                           	opt stack 0
   108                           
   109                           ; 2 bytes @ 0xE
   110  00000F                     	ds	2
   111  000011                     ??_set_frecuencia:
   112                           
   113                           ; 0 bytes @ 0x10
   114  000011                     	ds	2
   115  000013                     set_frecuencia@pr2:
   116                           	opt stack 0
   117                           
   118                           ; 2 bytes @ 0x12
   119  000013                     	ds	2
   120  000015                     init_pwm@st:
   121                           	opt stack 0
   122                           
   123                           ; 1 bytes @ 0x14
   124  000015                     	ds	1
   125  000016                     init_pwm@f:
   126                           	opt stack 0
   127                           
   128                           ; 2 bytes @ 0x15
   129  000016                     	ds	2
   130  000018                     init_pwm@duty:
   131                           	opt stack 0
   132                           
   133                           ; 2 bytes @ 0x17
   134  000018                     	ds	2
   135  00001A                     init_pwm@modulo:
   136                           	opt stack 0
   137                           
   138                           ; 1 bytes @ 0x19
   139  00001A                     	ds	1
   140  00001B                     ??_main:
   141                           
   142                           ; 0 bytes @ 0x1A
   143  00001B                     	ds	1
   144  00001C                     main@i:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x1B
   148  00001C                     	ds	2
   149                           tblptru	equ	0xFF8
   150                           
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 32 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;  i               2   27[COMRAM] int 
   161 ;; Return value:  Size  Location     Type
   162 ;;		None               void
   163 ;; Registers used:
   164 ;;		wreg, status,2, status,0, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   170 ;;      Params:         0       0       0       0       0       0       0       0       0
   171 ;;      Locals:         2       0       0       0       0       0       0       0       0
   172 ;;      Temps:          1       0       0       0       0       0       0       0       0
   173 ;;      Totals:         3       0       0       0       0       0       0       0       0
   174 ;;Total ram usage:        3 bytes
   175 ;; Hardware stack levels required when called:    3
   176 ;; This function calls:
   177 ;;		_init_pwm
   178 ;;		_set_clock
   179 ;;		_set_duty
   180 ;;		_set_port
   181 ;;		_toggle_d
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  007E36                     __ptext0:
   189                           	opt stack 0
   190  007E36                     _main:
   191                           	opt stack 28
   192                           
   193                           ;main.c: 33: int i=0;
   194                           
   195                           ;incstack = 0
   196  007E36  0E00               	movlw	0
   197  007E38  6E1D               	movwf	main@i+1,c
   198  007E3A  0E00               	movlw	0
   199  007E3C  6E1C               	movwf	main@i,c
   200                           
   201                           ;main.c: 34: set_clock();
   202  007E3E  ECAB  F03E         	call	_set_clock	;wreg free
   203                           
   204                           ;main.c: 35: set_port();
   205  007E42  ECB4  F03E         	call	_set_port	;wreg free
   206                           
   207                           ;main.c: 36: init_pwm(1,1,3000,434);
   208  007E46  0E01               	movlw	1
   209  007E48  6E15               	movwf	init_pwm@st,c
   210  007E4A  0E0B               	movlw	11
   211  007E4C  6E17               	movwf	init_pwm@f+1,c
   212  007E4E  0EB8               	movlw	184
   213  007E50  6E16               	movwf	init_pwm@f,c
   214  007E52  0E01               	movlw	1
   215  007E54  6E19               	movwf	init_pwm@duty+1,c
   216  007E56  0EB2               	movlw	178
   217  007E58  6E18               	movwf	init_pwm@duty,c
   218  007E5A  0E01               	movlw	1
   219  007E5C  EC55  F03F         	call	_init_pwm
   220                           
   221                           ;main.c: 37: init_pwm(2,1,3000,334);
   222  007E60  0E01               	movlw	1
   223  007E62  6E15               	movwf	init_pwm@st,c
   224  007E64  0E0B               	movlw	11
   225  007E66  6E17               	movwf	init_pwm@f+1,c
   226  007E68  0EB8               	movlw	184
   227  007E6A  6E16               	movwf	init_pwm@f,c
   228  007E6C  0E01               	movlw	1
   229  007E6E  6E19               	movwf	init_pwm@duty+1,c
   230  007E70  0E4E               	movlw	78
   231  007E72  6E18               	movwf	init_pwm@duty,c
   232  007E74  0E02               	movlw	2
   233  007E76  EC55  F03F         	call	_init_pwm
   234  007E7A                     l928:
   235                           
   236                           ;main.c: 42: toggle_d();
   237  007E7A  ECA9  F03E         	call	_toggle_d	;wreg free
   238                           
   239                           ;main.c: 43: _delay((unsigned long)((90)*(8000000/4000.0)));
   240  007E7E  0EEA               	movlw	234
   241  007E80  6E1B               	movwf	??_main& (0+255),c
   242  007E82  0EC3               	movlw	195
   243  007E84                     u217:
   244  007E84  2EE8               	decfsz	wreg,f,c
   245  007E86  D7FE               	goto	u217
   246  007E88  2E1B               	decfsz	??_main& (0+255),f,c
   247  007E8A  D7FC               	goto	u217
   248  007E8C  F000               	nop	
   249                           
   250                           ;main.c: 44: i=i+10;
   251  007E8E  0E0A               	movlw	10
   252  007E90  241C               	addwf	main@i,w,c
   253  007E92  6E1C               	movwf	main@i,c
   254  007E94  0E00               	movlw	0
   255  007E96  201D               	addwfc	main@i+1,w,c
   256  007E98  6E1D               	movwf	main@i+1,c
   257                           
   258                           ;main.c: 45: set_duty(2,i);
   259  007E9A  C01C  F001         	movff	main@i,set_duty@duty
   260  007E9E  C01D  F002         	movff	main@i+1,set_duty@duty+1
   261  007EA2  0E02               	movlw	2
   262  007EA4  ECF4  F03E         	call	_set_duty
   263  007EA8  D7E8               	goto	l928
   264  007EAA                     __end_of_main:
   265                           	opt stack 0
   266                           tblptru	equ	0xFF8
   267                           wreg	equ	0xFE8
   268                           
   269 ;; *************** function _toggle_d *****************
   270 ;; Defined at:
   271 ;;		line 25 in file "main.c"
   272 ;; Parameters:    Size  Location     Type
   273 ;;		None
   274 ;; Auto vars:     Size  Location     Type
   275 ;;		None
   276 ;; Return value:  Size  Location     Type
   277 ;;		None               void
   278 ;; Registers used:
   279 ;;		status,2, status,0
   280 ;; Tracked objects:
   281 ;;		On entry : 0/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   285 ;;      Params:         0       0       0       0       0       0       0       0       0
   286 ;;      Locals:         0       0       0       0       0       0       0       0       0
   287 ;;      Temps:          0       0       0       0       0       0       0       0       0
   288 ;;      Totals:         0       0       0       0       0       0       0       0       0
   289 ;;Total ram usage:        0 bytes
   290 ;; Hardware stack levels used:    1
   291 ;; This function calls:
   292 ;;		Nothing
   293 ;; This function is called by:
   294 ;;		_main
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text1
   299  007D52                     __ptext1:
   300                           	opt stack 0
   301  007D52                     _toggle_d:
   302                           	opt stack 30
   303                           
   304                           ;main.c: 26: PORTD=~PORTD;
   305                           
   306                           ;incstack = 0
   307  007D52  1E83               	comf	3971,f,c	;volatile
   308  007D54  0012               	return		;funcret
   309  007D56                     __end_of_toggle_d:
   310                           	opt stack 0
   311                           tblptru	equ	0xFF8
   312                           wreg	equ	0xFE8
   313                           
   314 ;; *************** function _set_port *****************
   315 ;; Defined at:
   316 ;;		line 14 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;		None               void
   323 ;; Registers used:
   324 ;;		wreg, status,2
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   330 ;;      Params:         0       0       0       0       0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0       0       0       0       0
   333 ;;      Totals:         0       0       0       0       0       0       0       0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		_main
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text2
   344  007D68                     __ptext2:
   345                           	opt stack 0
   346  007D68                     _set_port:
   347                           	opt stack 30
   348                           
   349                           ;main.c: 16: TRISD=0;
   350                           
   351                           ;incstack = 0
   352  007D68  0E00               	movlw	0
   353  007D6A  6E95               	movwf	3989,c	;volatile
   354                           
   355                           ;main.c: 17: TRISB=0;
   356  007D6C  0E00               	movlw	0
   357  007D6E  6E93               	movwf	3987,c	;volatile
   358                           
   359                           ;main.c: 18: PORTC=255;
   360  007D70  6882               	setf	3970,c	;volatile
   361                           
   362                           ;main.c: 19: PORTD=255;
   363  007D72  6883               	setf	3971,c	;volatile
   364  007D74  0012               	return		;funcret
   365  007D76                     __end_of_set_port:
   366                           	opt stack 0
   367                           tblptru	equ	0xFF8
   368                           wreg	equ	0xFE8
   369                           
   370 ;; *************** function _set_clock *****************
   371 ;; Defined at:
   372 ;;		line 21 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;		None               void
   379 ;; Registers used:
   380 ;;		None
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         0       0       0       0       0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0
   389 ;;      Totals:         0       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text3
   400  007D56                     __ptext3:
   401                           	opt stack 0
   402  007D56                     _set_clock:
   403                           	opt stack 30
   404                           
   405                           ;main.c: 22: OSCCONbits.IRCF=7;
   406                           
   407                           ;incstack = 0
   408  007D56  88D3               	bsf	4051,4,c	;volatile
   409  007D58  8AD3               	bsf	4051,5,c	;volatile
   410  007D5A  8CD3               	bsf	4051,6,c	;volatile
   411  007D5C  0012               	return		;funcret
   412  007D5E                     __end_of_set_clock:
   413                           	opt stack 0
   414                           tblptru	equ	0xFF8
   415                           wreg	equ	0xFE8
   416                           
   417 ;; *************** function _init_pwm *****************
   418 ;; Defined at:
   419 ;;		line 45 in file "PWM.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  modulo          1    wreg     unsigned char 
   422 ;;  st              1   20[COMRAM] unsigned char 
   423 ;;  f               2   21[COMRAM] unsigned int 
   424 ;;  duty            2   23[COMRAM] unsigned int 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  modulo          1   25[COMRAM] unsigned char 
   427 ;; Return value:  Size  Location     Type
   428 ;;		None               void
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   436 ;;      Params:         5       0       0       0       0       0       0       0       0
   437 ;;      Locals:         1       0       0       0       0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0       0       0
   439 ;;      Totals:         6       0       0       0       0       0       0       0       0
   440 ;;Total ram usage:        6 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    2
   443 ;; This function calls:
   444 ;;		_set_duty
   445 ;;		_set_frecuencia
   446 ;;		_set_pin
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text4
   453  007EAA                     __ptext4:
   454                           	opt stack 0
   455  007EAA                     _init_pwm:
   456                           	opt stack 28
   457                           
   458                           ;incstack = 0
   459                           ;init_pwm@modulo stored from wreg
   460  007EAA  6E1A               	movwf	init_pwm@modulo,c
   461                           
   462                           ;PWM.c: 46: T2CONbits.T2CKPS=1;
   463  007EAC  50CA               	movf	4042,w,c	;volatile
   464  007EAE  0BFC               	andlw	-4
   465  007EB0  0901               	iorlw	1
   466  007EB2  6ECA               	movwf	4042,c	;volatile
   467                           
   468                           ;PWM.c: 47: T2CONbits.TMR2ON=1;
   469  007EB4  84CA               	bsf	4042,2,c	;volatile
   470                           
   471                           ;PWM.c: 48: switch (modulo){
   472  007EB6  D036               	goto	l918
   473  007EB8                     l892:
   474                           
   475                           ;PWM.c: 50: if (st){
   476  007EB8  5015               	movf	init_pwm@st,w,c
   477  007EBA  B4D8               	btfsc	status,2,c
   478  007EBC  D015               	goto	l902
   479                           
   480                           ;PWM.c: 51: CCP1CON=0b00001100;
   481  007EBE  0E0C               	movlw	12
   482  007EC0  6EBD               	movwf	4029,c	;volatile
   483                           
   484                           ;PWM.c: 52: set_frecuencia(f);
   485  007EC2  C016  F00F         	movff	init_pwm@f,set_frecuencia@p
   486  007EC6  C017  F010         	movff	init_pwm@f+1,set_frecuencia@p+1
   487  007ECA  ECD1  F03E         	call	_set_frecuencia	;wreg free
   488                           
   489                           ;PWM.c: 53: set_duty(1,duty);
   490  007ECE  C018  F001         	movff	init_pwm@duty,set_duty@duty
   491  007ED2  C019  F002         	movff	init_pwm@duty+1,set_duty@duty+1
   492  007ED6  0E01               	movlw	1
   493  007ED8  ECF4  F03E         	call	_set_duty
   494                           
   495                           ;PWM.c: 54: set_pin(1,0);
   496  007EDC  0E00               	movlw	0
   497  007EDE  6E01               	movwf	set_pin@st,c
   498  007EE0  0E01               	movlw	1
   499  007EE2  ECBB  F03E         	call	_set_pin
   500                           
   501                           ;PWM.c: 55: }
   502  007EE6  0012               	return	
   503  007EE8                     l902:
   504                           
   505                           ;PWM.c: 56: else
   506                           ;PWM.c: 57: CCP1CON=0;
   507  007EE8  0E00               	movlw	0
   508  007EEA  6EBD               	movwf	4029,c	;volatile
   509                           
   510                           ;PWM.c: 58: break;
   511  007EEC  0012               	return	
   512  007EEE                     l904:
   513                           
   514                           ;PWM.c: 60: if (st){
   515  007EEE  5015               	movf	init_pwm@st,w,c
   516  007EF0  B4D8               	btfsc	status,2,c
   517  007EF2  D015               	goto	l914
   518                           
   519                           ;PWM.c: 61: CCP2CON=0b00001100;
   520  007EF4  0E0C               	movlw	12
   521  007EF6  6EBA               	movwf	4026,c	;volatile
   522                           
   523                           ;PWM.c: 62: set_frecuencia(f);
   524  007EF8  C016  F00F         	movff	init_pwm@f,set_frecuencia@p
   525  007EFC  C017  F010         	movff	init_pwm@f+1,set_frecuencia@p+1
   526  007F00  ECD1  F03E         	call	_set_frecuencia	;wreg free
   527                           
   528                           ;PWM.c: 63: set_duty(2,duty);
   529  007F04  C018  F001         	movff	init_pwm@duty,set_duty@duty
   530  007F08  C019  F002         	movff	init_pwm@duty+1,set_duty@duty+1
   531  007F0C  0E02               	movlw	2
   532  007F0E  ECF4  F03E         	call	_set_duty
   533                           
   534                           ;PWM.c: 64: set_pin(2,0);
   535  007F12  0E00               	movlw	0
   536  007F14  6E01               	movwf	set_pin@st,c
   537  007F16  0E02               	movlw	2
   538  007F18  ECBB  F03E         	call	_set_pin
   539                           
   540                           ;PWM.c: 65: }
   541  007F1C  0012               	return	
   542  007F1E                     l914:
   543                           
   544                           ;PWM.c: 66: else
   545                           ;PWM.c: 67: CCP2CON=0;
   546  007F1E  0E00               	movlw	0
   547  007F20  6EBA               	movwf	4026,c	;volatile
   548                           
   549                           ;PWM.c: 70: }
   550                           
   551                           ;PWM.c: 68: break;
   552  007F22  0012               	return	
   553  007F24                     l918:
   554  007F24  501A               	movf	init_pwm@modulo,w,c
   555                           
   556                           ; Switch size 1, requested type "space"
   557                           ; Number of cases is 2, Range of values is 1 to 2
   558                           ; switch strategies available:
   559                           ; Name         Instructions Cycles
   560                           ; simple_byte            7     4 (average)
   561                           ;	Chosen strategy is simple_byte
   562  007F26  0A01               	xorlw	1	; case 1
   563  007F28  B4D8               	btfsc	status,2,c
   564  007F2A  D7C6               	goto	l892
   565  007F2C  0A03               	xorlw	3	; case 2
   566  007F2E  A4D8               	btfss	status,2,c
   567  007F30  0012               	return	
   568  007F32  D7DD               	goto	l904
   569  007F34                     __end_of_init_pwm:
   570                           	opt stack 0
   571                           tblptru	equ	0xFF8
   572                           wreg	equ	0xFE8
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _set_pin *****************
   576 ;; Defined at:
   577 ;;		line 8 in file "PWM.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  modulo          1    wreg     unsigned char 
   580 ;;  st              1    0[COMRAM] unsigned char 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  modulo          1    1[COMRAM] unsigned char 
   583 ;; Return value:  Size  Location     Type
   584 ;;		None               void
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         1       0       0       0       0       0       0       0       0
   593 ;;      Locals:         1       0       0       0       0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0
   595 ;;      Totals:         2       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        2 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_init_pwm
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text5
   606  007D76                     __ptext5:
   607                           	opt stack 0
   608  007D76                     _set_pin:
   609                           	opt stack 29
   610                           
   611                           ;incstack = 0
   612                           ;set_pin@modulo stored from wreg
   613  007D76  6E02               	movwf	set_pin@modulo,c
   614                           
   615                           ;PWM.c: 9: switch (modulo){
   616  007D78  D00C               	goto	l868
   617  007D7A                     l20:
   618                           
   619                           ;PWM.c: 11: TRISCbits.RC2=st;
   620  007D7A  B001               	btfsc	set_pin@st,0,c
   621  007D7C  D002               	bra	u175
   622  007D7E  9494               	bcf	3988,2,c	;volatile
   623  007D80  D001               	bra	u176
   624  007D82                     u175:
   625  007D82  8494               	bsf	3988,2,c	;volatile
   626  007D84                     u176:
   627                           
   628                           ;PWM.c: 12: break;
   629  007D84  0012               	return	
   630  007D86                     l22:
   631                           
   632                           ;PWM.c: 14: TRISCbits.RC1=st;
   633  007D86  B001               	btfsc	set_pin@st,0,c
   634  007D88  D002               	bra	u185
   635  007D8A  9294               	bcf	3988,1,c	;volatile
   636  007D8C  D001               	bra	u186
   637  007D8E                     u185:
   638  007D8E  8294               	bsf	3988,1,c	;volatile
   639  007D90                     u186:
   640                           
   641                           ;PWM.c: 16: }
   642                           
   643                           ;PWM.c: 15: break;
   644  007D90  0012               	return	
   645  007D92                     l868:
   646  007D92  5002               	movf	set_pin@modulo,w,c
   647                           
   648                           ; Switch size 1, requested type "space"
   649                           ; Number of cases is 2, Range of values is 1 to 2
   650                           ; switch strategies available:
   651                           ; Name         Instructions Cycles
   652                           ; simple_byte            7     4 (average)
   653                           ;	Chosen strategy is simple_byte
   654  007D94  0A01               	xorlw	1	; case 1
   655  007D96  B4D8               	btfsc	status,2,c
   656  007D98  D7F0               	goto	l20
   657  007D9A  0A03               	xorlw	3	; case 2
   658  007D9C  A4D8               	btfss	status,2,c
   659  007D9E  0012               	return	
   660  007DA0  D7F2               	goto	l22
   661  007DA2                     __end_of_set_pin:
   662                           	opt stack 0
   663                           tblptru	equ	0xFF8
   664                           wreg	equ	0xFE8
   665                           status	equ	0xFD8
   666                           
   667 ;; *************** function _set_frecuencia *****************
   668 ;; Defined at:
   669 ;;		line 20 in file "PWM.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  p               2   14[COMRAM] unsigned int 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  pr2             2   18[COMRAM] int 
   674 ;; Return value:  Size  Location     Type
   675 ;;		None               void
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   683 ;;      Params:         2       0       0       0       0       0       0       0       0
   684 ;;      Locals:         2       0       0       0       0       0       0       0       0
   685 ;;      Temps:          2       0       0       0       0       0       0       0       0
   686 ;;      Totals:         6       0       0       0       0       0       0       0       0
   687 ;;Total ram usage:        6 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    1
   690 ;; This function calls:
   691 ;;		___aldiv
   692 ;; This function is called by:
   693 ;;		_init_pwm
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text6
   698  007DA2                     __ptext6:
   699                           	opt stack 0
   700  007DA2                     _set_frecuencia:
   701                           	opt stack 28
   702                           
   703                           ;PWM.c: 21: int pr2=8000000/(4*p*1);
   704                           
   705                           ;incstack = 0
   706  007DA2  0E00               	movlw	0
   707  007DA4  6E01               	movwf	___aldiv@dividend,c
   708  007DA6  0E12               	movlw	18
   709  007DA8  6E02               	movwf	___aldiv@dividend+1,c
   710  007DAA  0E7A               	movlw	122
   711  007DAC  6E03               	movwf	___aldiv@dividend+2,c
   712  007DAE  0E00               	movlw	0
   713  007DB0  6E04               	movwf	___aldiv@dividend+3,c
   714  007DB2  C00F  F011         	movff	set_frecuencia@p,??_set_frecuencia
   715  007DB6  C010  F012         	movff	set_frecuencia@p+1,??_set_frecuencia+1
   716  007DBA  90D8               	bcf	status,0,c
   717  007DBC  3611               	rlcf	??_set_frecuencia,f,c
   718  007DBE  3612               	rlcf	??_set_frecuencia+1,f,c
   719  007DC0  90D8               	bcf	status,0,c
   720  007DC2  3611               	rlcf	??_set_frecuencia,f,c
   721  007DC4  3612               	rlcf	??_set_frecuencia+1,f,c
   722  007DC6  C011  F005         	movff	??_set_frecuencia,___aldiv@divisor
   723  007DCA  C012  F006         	movff	??_set_frecuencia+1,___aldiv@divisor+1
   724  007DCE  6A07               	clrf	___aldiv@divisor+2,c
   725  007DD0  6A08               	clrf	___aldiv@divisor+3,c
   726  007DD2  EC9A  F03F         	call	___aldiv	;wreg free
   727  007DD6  C001  F013         	movff	?___aldiv,set_frecuencia@pr2
   728  007DDA  C002  F014         	movff	?___aldiv+1,set_frecuencia@pr2+1
   729                           
   730                           ;PWM.c: 22: PR2=pr2-1;
   731  007DDE  0413               	decf	set_frecuencia@pr2,w,c
   732  007DE0  6ECB               	movwf	4043,c	;volatile
   733                           
   734                           ;PWM.c: 23: TMR2=0;
   735  007DE2  0E00               	movlw	0
   736  007DE4  6ECC               	movwf	4044,c	;volatile
   737  007DE6  0012               	return		;funcret
   738  007DE8                     __end_of_set_frecuencia:
   739                           	opt stack 0
   740                           tblptru	equ	0xFF8
   741                           wreg	equ	0xFE8
   742                           status	equ	0xFD8
   743                           
   744 ;; *************** function ___aldiv *****************
   745 ;; Defined at:
   746 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/aldiv.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  dividend        4    0[COMRAM] long 
   749 ;;  divisor         4    4[COMRAM] long 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  quotient        4   10[COMRAM] long 
   752 ;;  sign            1    9[COMRAM] unsigned char 
   753 ;;  counter         1    8[COMRAM] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  4    0[COMRAM] long 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   763 ;;      Params:         8       0       0       0       0       0       0       0       0
   764 ;;      Locals:         6       0       0       0       0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0       0       0
   766 ;;      Totals:        14       0       0       0       0       0       0       0       0
   767 ;;Total ram usage:       14 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_set_frecuencia
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text7
   777  007F34                     __ptext7:
   778                           	opt stack 0
   779  007F34                     ___aldiv:
   780                           	opt stack 28
   781                           
   782                           ;incstack = 0
   783  007F34  0E00               	movlw	0
   784  007F36  6E0A               	movwf	___aldiv@sign,c
   785  007F38  AE08               	btfss	___aldiv@divisor+3,7,c
   786  007F3A  D00A               	goto	l828
   787  007F3C  1E08               	comf	___aldiv@divisor+3,f,c
   788  007F3E  1E07               	comf	___aldiv@divisor+2,f,c
   789  007F40  1E06               	comf	___aldiv@divisor+1,f,c
   790  007F42  6C05               	negf	___aldiv@divisor,c
   791  007F44  0E00               	movlw	0
   792  007F46  2206               	addwfc	___aldiv@divisor+1,f,c
   793  007F48  2207               	addwfc	___aldiv@divisor+2,f,c
   794  007F4A  2208               	addwfc	___aldiv@divisor+3,f,c
   795  007F4C  0E01               	movlw	1
   796  007F4E  6E0A               	movwf	___aldiv@sign,c
   797  007F50                     l828:
   798  007F50  AE04               	btfss	___aldiv@dividend+3,7,c
   799  007F52  D00A               	goto	l834
   800  007F54  1E04               	comf	___aldiv@dividend+3,f,c
   801  007F56  1E03               	comf	___aldiv@dividend+2,f,c
   802  007F58  1E02               	comf	___aldiv@dividend+1,f,c
   803  007F5A  6C01               	negf	___aldiv@dividend,c
   804  007F5C  0E00               	movlw	0
   805  007F5E  2202               	addwfc	___aldiv@dividend+1,f,c
   806  007F60  2203               	addwfc	___aldiv@dividend+2,f,c
   807  007F62  2204               	addwfc	___aldiv@dividend+3,f,c
   808  007F64  0E01               	movlw	1
   809  007F66  1A0A               	xorwf	___aldiv@sign,f,c
   810  007F68                     l834:
   811  007F68  0E00               	movlw	0
   812  007F6A  6E0B               	movwf	___aldiv@quotient,c
   813  007F6C  0E00               	movlw	0
   814  007F6E  6E0C               	movwf	___aldiv@quotient+1,c
   815  007F70  0E00               	movlw	0
   816  007F72  6E0D               	movwf	___aldiv@quotient+2,c
   817  007F74  0E00               	movlw	0
   818  007F76  6E0E               	movwf	___aldiv@quotient+3,c
   819  007F78  5005               	movf	___aldiv@divisor,w,c
   820  007F7A  1006               	iorwf	___aldiv@divisor+1,w,c
   821  007F7C  1007               	iorwf	___aldiv@divisor+2,w,c
   822  007F7E  1008               	iorwf	___aldiv@divisor+3,w,c
   823  007F80  B4D8               	btfsc	status,2,c
   824  007F82  D02A               	goto	l856
   825  007F84  0E01               	movlw	1
   826  007F86  6E09               	movwf	___aldiv@counter,c
   827  007F88  D006               	goto	l842
   828  007F8A                     l840:
   829  007F8A  90D8               	bcf	status,0,c
   830  007F8C  3605               	rlcf	___aldiv@divisor,f,c
   831  007F8E  3606               	rlcf	___aldiv@divisor+1,f,c
   832  007F90  3607               	rlcf	___aldiv@divisor+2,f,c
   833  007F92  3608               	rlcf	___aldiv@divisor+3,f,c
   834  007F94  2A09               	incf	___aldiv@counter,f,c
   835  007F96                     l842:
   836  007F96  AE08               	btfss	___aldiv@divisor+3,7,c
   837  007F98  D7F8               	goto	l840
   838  007F9A                     l844:
   839  007F9A  90D8               	bcf	status,0,c
   840  007F9C  360B               	rlcf	___aldiv@quotient,f,c
   841  007F9E  360C               	rlcf	___aldiv@quotient+1,f,c
   842  007FA0  360D               	rlcf	___aldiv@quotient+2,f,c
   843  007FA2  360E               	rlcf	___aldiv@quotient+3,f,c
   844  007FA4  5005               	movf	___aldiv@divisor,w,c
   845  007FA6  5C01               	subwf	___aldiv@dividend,w,c
   846  007FA8  5006               	movf	___aldiv@divisor+1,w,c
   847  007FAA  5802               	subwfb	___aldiv@dividend+1,w,c
   848  007FAC  5007               	movf	___aldiv@divisor+2,w,c
   849  007FAE  5803               	subwfb	___aldiv@dividend+2,w,c
   850  007FB0  5008               	movf	___aldiv@divisor+3,w,c
   851  007FB2  5804               	subwfb	___aldiv@dividend+3,w,c
   852  007FB4  A0D8               	btfss	status,0,c
   853  007FB6  D009               	goto	l852
   854  007FB8  5005               	movf	___aldiv@divisor,w,c
   855  007FBA  5E01               	subwf	___aldiv@dividend,f,c
   856  007FBC  5006               	movf	___aldiv@divisor+1,w,c
   857  007FBE  5A02               	subwfb	___aldiv@dividend+1,f,c
   858  007FC0  5007               	movf	___aldiv@divisor+2,w,c
   859  007FC2  5A03               	subwfb	___aldiv@dividend+2,f,c
   860  007FC4  5008               	movf	___aldiv@divisor+3,w,c
   861  007FC6  5A04               	subwfb	___aldiv@dividend+3,f,c
   862  007FC8  800B               	bsf	___aldiv@quotient,0,c
   863  007FCA                     l852:
   864  007FCA  90D8               	bcf	status,0,c
   865  007FCC  3208               	rrcf	___aldiv@divisor+3,f,c
   866  007FCE  3207               	rrcf	___aldiv@divisor+2,f,c
   867  007FD0  3206               	rrcf	___aldiv@divisor+1,f,c
   868  007FD2  3205               	rrcf	___aldiv@divisor,f,c
   869  007FD4  2E09               	decfsz	___aldiv@counter,f,c
   870  007FD6  D7E1               	goto	l844
   871  007FD8                     l856:
   872  007FD8  500A               	movf	___aldiv@sign,w,c
   873  007FDA  B4D8               	btfsc	status,2,c
   874  007FDC  D008               	goto	l860
   875  007FDE  1E0E               	comf	___aldiv@quotient+3,f,c
   876  007FE0  1E0D               	comf	___aldiv@quotient+2,f,c
   877  007FE2  1E0C               	comf	___aldiv@quotient+1,f,c
   878  007FE4  6C0B               	negf	___aldiv@quotient,c
   879  007FE6  0E00               	movlw	0
   880  007FE8  220C               	addwfc	___aldiv@quotient+1,f,c
   881  007FEA  220D               	addwfc	___aldiv@quotient+2,f,c
   882  007FEC  220E               	addwfc	___aldiv@quotient+3,f,c
   883  007FEE                     l860:
   884  007FEE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   885  007FF2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   886  007FF6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   887  007FFA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   888  007FFE  0012               	return	
   889  008000                     __end_of___aldiv:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           wreg	equ	0xFE8
   893                           status	equ	0xFD8
   894                           
   895 ;; *************** function _set_duty *****************
   896 ;; Defined at:
   897 ;;		line 26 in file "PWM.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  modulo          1    wreg     unsigned char 
   900 ;;  duty            2    0[COMRAM] unsigned int 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  modulo          1    4[COMRAM] unsigned char 
   903 ;;  lsb             1    6[COMRAM] unsigned char 
   904 ;;  msb             1    5[COMRAM] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;		None               void
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         2       0       0       0       0       0       0       0       0
   915 ;;      Locals:         3       0       0       0       0       0       0       0       0
   916 ;;      Temps:          2       0       0       0       0       0       0       0       0
   917 ;;      Totals:         7       0       0       0       0       0       0       0       0
   918 ;;Total ram usage:        7 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_init_pwm
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text8
   929  007DE8                     __ptext8:
   930                           	opt stack 0
   931  007DE8                     _set_duty:
   932                           	opt stack 30
   933                           
   934                           ;incstack = 0
   935                           ;set_duty@modulo stored from wreg
   936  007DE8  6E05               	movwf	set_duty@modulo,c
   937                           
   938                           ;PWM.c: 30: u8 msb,lsb;
   939                           ;PWM.c: 31: msb = (duty >> 2) & 0xFF;
   940  007DEA  C001  F003         	movff	set_duty@duty,??_set_duty
   941  007DEE  C002  F004         	movff	set_duty@duty+1,??_set_duty+1
   942  007DF2  90D8               	bcf	status,0,c
   943  007DF4  3204               	rrcf	??_set_duty+1,f,c
   944  007DF6  3203               	rrcf	??_set_duty,f,c
   945  007DF8  90D8               	bcf	status,0,c
   946  007DFA  3204               	rrcf	??_set_duty+1,f,c
   947  007DFC  3203               	rrcf	??_set_duty,f,c
   948  007DFE  5003               	movf	??_set_duty,w,c
   949  007E00  6E06               	movwf	set_duty@msb,c
   950                           
   951                           ;PWM.c: 32: lsb = ((u8)duty & 0x03) << 4;
   952  007E02  C001  F003         	movff	set_duty@duty,??_set_duty
   953  007E06  0E03               	movlw	3
   954  007E08  1603               	andwf	??_set_duty,f,c
   955  007E0A  3803               	swapf	??_set_duty,w,c
   956  007E0C  0BF0               	andlw	240
   957  007E0E  6E07               	movwf	set_duty@lsb,c
   958                           
   959                           ;PWM.c: 33: switch (modulo){
   960  007E10  D00A               	goto	l886
   961  007E12                     l30:
   962                           
   963                           ;PWM.c: 35: CCPR1L=msb;
   964  007E12  C006  FFBE         	movff	set_duty@msb,4030	;volatile
   965                           
   966                           ;PWM.c: 36: CCP1CON |=lsb;
   967  007E16  5007               	movf	set_duty@lsb,w,c
   968  007E18  12BD               	iorwf	4029,f,c	;volatile
   969                           
   970                           ;PWM.c: 37: break;
   971  007E1A  0012               	return	
   972  007E1C                     l32:
   973                           
   974                           ;PWM.c: 39: CCPR2L=msb;
   975  007E1C  C006  FFBB         	movff	set_duty@msb,4027	;volatile
   976                           
   977                           ;PWM.c: 40: CCP2CON |=lsb;
   978  007E20  5007               	movf	set_duty@lsb,w,c
   979  007E22  12BA               	iorwf	4026,f,c	;volatile
   980                           
   981                           ;PWM.c: 42: }
   982                           
   983                           ;PWM.c: 41: break;
   984  007E24  0012               	return	
   985  007E26                     l886:
   986  007E26  5005               	movf	set_duty@modulo,w,c
   987                           
   988                           ; Switch size 1, requested type "space"
   989                           ; Number of cases is 2, Range of values is 1 to 2
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte            7     4 (average)
   993                           ;	Chosen strategy is simple_byte
   994  007E28  0A01               	xorlw	1	; case 1
   995  007E2A  B4D8               	btfsc	status,2,c
   996  007E2C  D7F2               	goto	l30
   997  007E2E  0A03               	xorlw	3	; case 2
   998  007E30  A4D8               	btfss	status,2,c
   999  007E32  0012               	return	
  1000  007E34  D7F3               	goto	l32
  1001  007E36                     __end_of_set_duty:
  1002                           	opt stack 0
  1003  0000                     tblptru	equ	0xFF8
  1004                           wreg	equ	0xFE8
  1005                           status	equ	0xFD8
  1006                           tblptru	equ	0xFF8
  1007                           wreg	equ	0xFE8
  1008                           status	equ	0xFD8
  1009                           
  1010                           	psect	rparam
  1011  0000                     tblptru	equ	0xFF8
  1012                           wreg	equ	0xFE8
  1013                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_init_pwm
    _init_pwm->_set_frecuencia
    _set_frecuencia->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2075
                                             26 COMRAM     3     3      0
                           _init_pwm
                          _set_clock
                           _set_duty
                           _set_port
                           _toggle_d
 ---------------------------------------------------------------------------------
 (1) _toggle_d                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_clock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             6     1      5    1681
                                             20 COMRAM     6     1      5
                           _set_duty
                     _set_frecuencia
                            _set_pin
 ---------------------------------------------------------------------------------
 (2) _set_pin                                              2     1      1     194
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _set_frecuencia                                       6     4      2     601
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _set_duty                                             7     5      2     348
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_pwm
     _set_duty
     _set_frecuencia
       ___aldiv
     _set_pin
   _set_clock
   _set_duty
   _set_port
   _toggle_d

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1D      1D       1       30.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu May 25 16:51:51 2017

                     l20 7D7A                       l30 7E12                       l22 7D86  
                     l32 7E1C              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_LVP$ON 000000                      l902 7EE8  
                    l840 7F8A                      l904 7EEE                      l842 7F96  
                    l834 7F68                      l914 7F1E                      l860 7FEE  
                    l852 7FCA                      l844 7F9A                      l828 7F50  
                    l918 7F24                      l856 7FD8                      l928 7E7A  
                    l868 7D92                      l892 7EB8                      l886 7E26  
           __CFG_CPB$OFF 000000                      u217 7E84                      _PR2 000FCB  
                    u175 7D82                      u176 7D84                      u185 7D8E  
                    u186 7D90             __CFG_CPD$OFF 000000                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     _TMR2 000FCC                     _main 7E36  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000010            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
        __end_of___aldiv 8000                    ?_main 0001                    _PORTC 000F82  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISB 000F93  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  main@i 001C          __end_of_set_pin 7DA2                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000          __initialization 7D5E  
           __end_of_main 7EAA                   ??_main 001B            __activetblptr 000002  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB           __CFG_XINST$OFF 000000  
              ??___aldiv 0009           __CFG_STVREN$ON 000000         __end_of_init_pwm 7F34  
       __end_of_set_duty 7E36         __end_of_set_port 7D76                   tblptru 000FF8  
              ??_set_pin 0002         __end_of_toggle_d 7D56               __accesstop 0060  
__end_of__initialization 7D5E            ___rparam_used 000001  __size_of_set_frecuencia 0046  
         __pcstackCOMRAM 0001                  _CCP1CON 000FBD                  _CCP2CON 000FBA  
     __size_of_set_clock 0008          __CFG_VREGEN$OFF 000000                ?_init_pwm 0015  
                __Hparam 0000                  __Lparam 0000                ?_set_duty 0001  
              ?_set_port 0001                  ___aldiv 7F34                ?_toggle_d 0001  
                __pcinit 7D5E                  __ramtop 0800                  __ptext0 7E36  
                __ptext1 7D52                  __ptext2 7D68                  __ptext3 7D56  
                __ptext4 7EAA                  __ptext5 7D76                  __ptext6 7DA2  
                __ptext7 7F34                  __ptext8 7DE8                _T2CONbits 000FCA  
       ___aldiv@dividend 0001                  _set_pin 7D76              set_duty@lsb 0007  
            set_duty@msb 0006     end_of_initialization 7D5E        __end_of_set_clock 7D5E  
          __Lmediumconst 0000               ??_init_pwm 001A           _set_frecuencia 7DA2  
           init_pwm@duty 0018               ??_set_duty 0003               ??_set_port 0001  
       ___aldiv@quotient 000B               ??_toggle_d 0001                _TRISCbits 000F94  
         set_duty@modulo 0005   __end_of_set_frecuencia 7DE8      start_initialization 7D5E  
        ?_set_frecuencia 000F         __CFG_LPT1OSC$OFF 000000               init_pwm@st 0015  
      set_frecuencia@pr2 0013        __size_of_init_pwm 008A                 ?___aldiv 0001  
      __size_of_set_duty 004E        __size_of_set_port 000E        __size_of_toggle_d 0004  
               ?_set_pin 0001          ___aldiv@divisor 0005          ___aldiv@counter 0009  
              _set_clock 7D56         __CFG_WDTPS$32768 000000            set_pin@modulo 0002  
               __Hrparam 0000               ?_set_clock 0001                 __Lrparam 0000  
              init_pwm@f 0016         __size_of___aldiv 00CC         ??_set_frecuencia 0011  
       __size_of_set_pin 002C           init_pwm@modulo 001A            __size_of_main 0074  
               _init_pwm 7EAA                set_pin@st 0001                 _set_duty 7DE8  
               _set_port 7D68                 _toggle_d 7D52             set_duty@duty 0001  
  __CFG_CPUDIV$OSC1_PLL2 000000          set_frecuencia@p 000F               _OSCCONbits 000FD3  
            ??_set_clock 0001      __CFG_FOSC$INTOSC_EC 000000             ___aldiv@sign 000A  
