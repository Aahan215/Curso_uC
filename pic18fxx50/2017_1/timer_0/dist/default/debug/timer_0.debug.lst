

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed May 31 04:00:30 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	nvCOMRAM
    24  000028                     __pnvCOMRAM:
    25                           	opt stack 0
    26  000028                     _periodo:
    27                           	opt stack 0
    28  000028                     	ds	4
    29  0000                     _INTCONbits	set	4082
    30  0000                     _OSCCONbits	set	4051
    31  0000                     _PORTC	set	3970
    32  0000                     _PORTD	set	3971
    33  0000                     _T0CONbits	set	4053
    34  0000                     _TMR0H	set	4055
    35  0000                     _TMR0L	set	4054
    36  0000                     _TRISC	set	3988
    37  0000                     _TRISD	set	3989
    38                           
    39                           ; #config settings
    40  0000                     
    41                           	psect	cinit
    42  007A98                     __pcinit:
    43                           	opt stack 0
    44  007A98                     start_initialization:
    45                           	opt stack 0
    46  007A98                     __initialization:
    47                           	opt stack 0
    48                           
    49                           ; Clear objects allocated to COMRAM (5 bytes)
    50  007A98  6A27               	clrf	(__pbssCOMRAM+4)& (0+255),c
    51  007A9A  6A26               	clrf	(__pbssCOMRAM+3)& (0+255),c
    52  007A9C  6A25               	clrf	(__pbssCOMRAM+2)& (0+255),c
    53  007A9E  6A24               	clrf	(__pbssCOMRAM+1)& (0+255),c
    54  007AA0  6A23               	clrf	__pbssCOMRAM& (0+255),c
    55  007AA2                     end_of_initialization:
    56                           	opt stack 0
    57  007AA2                     __end_of__initialization:
    58                           	opt stack 0
    59  007AA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
    60  007AA4  6EF8               	movwf	tblptru,c
    61  007AA6  0100               	movlb	0
    62  007AA8  EF8D  F03D         	goto	_main	;jump to C main() function
    63                           tblptru	equ	0xFF8
    64                           
    65                           	psect	bssCOMRAM
    66  000023                     __pbssCOMRAM:
    67                           	opt stack 0
    68  000023                     _flag_c:
    69                           	opt stack 0
    70  000023                     	ds	1
    71  000024                     _flag_d:
    72                           	opt stack 0
    73  000024                     	ds	1
    74  000025                     _flag_p:
    75                           	opt stack 0
    76  000025                     	ds	1
    77  000026                     _th:
    78                           	opt stack 0
    79  000026                     	ds	1
    80  000027                     _tl:
    81                           	opt stack 0
    82  000027                     	ds	1
    83                           tblptru	equ	0xFF8
    84                           
    85                           	psect	cstackCOMRAM
    86  000001                     __pcstackCOMRAM:
    87                           	opt stack 0
    88  000001                     ?___lmul:
    89                           	opt stack 0
    90  000001                     init_timer@state:
    91                           	opt stack 0
    92  000001                     ___lmul@multiplier:
    93                           	opt stack 0
    94                           
    95                           ; 4 bytes @ 0x0
    96  000001                     	ds	1
    97  000002                     
    98                           ; 0 bytes @ 0x1
    99  000002                     	ds	3
   100  000005                     ___lmul@multiplicand:
   101                           	opt stack 0
   102                           
   103                           ; 4 bytes @ 0x4
   104  000005                     	ds	4
   105  000009                     ___lmul@product:
   106                           	opt stack 0
   107                           
   108                           ; 4 bytes @ 0x8
   109  000009                     	ds	4
   110  00000D                     ?___lldiv:
   111                           	opt stack 0
   112  00000D                     ___lldiv@dividend:
   113                           	opt stack 0
   114                           
   115                           ; 4 bytes @ 0xC
   116  00000D                     	ds	4
   117  000011                     ___lldiv@divisor:
   118                           	opt stack 0
   119                           
   120                           ; 4 bytes @ 0x10
   121  000011                     	ds	4
   122  000015                     ___lldiv@quotient:
   123                           	opt stack 0
   124                           
   125                           ; 4 bytes @ 0x14
   126  000015                     	ds	4
   127  000019                     ___lldiv@counter:
   128                           	opt stack 0
   129                           
   130                           ; 1 bytes @ 0x18
   131  000019                     	ds	1
   132  00001A                     set_timer@time:
   133                           	opt stack 0
   134                           
   135                           ; 4 bytes @ 0x19
   136  00001A                     	ds	4
   137  00001E                     set_timer@unidad:
   138                           	opt stack 0
   139                           
   140                           ; 1 bytes @ 0x1D
   141  00001E                     	ds	1
   142  00001F                     set_timer@aux:
   143                           	opt stack 0
   144                           
   145                           ; 2 bytes @ 0x1E
   146  00001F                     	ds	2
   147  000021                     set_timer@t:
   148                           	opt stack 0
   149                           
   150                           ; 2 bytes @ 0x20
   151  000021                     	ds	2
   152  000023                     tblptru	equ	0xFF8
   153                           
   154                           ; 0 bytes @ 0x22
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 31 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;		None
   165 ;; Return value:  Size  Location     Type
   166 ;;		None               void
   167 ;; Registers used:
   168 ;;		wreg, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   174 ;;      Params:         0       0       0       0       0       0       0       0       0
   175 ;;      Locals:         0       0       0       0       0       0       0       0       0
   176 ;;      Temps:          0       0       0       0       0       0       0       0       0
   177 ;;      Totals:         0       0       0       0       0       0       0       0       0
   178 ;;Total ram usage:        0 bytes
   179 ;; Hardware stack levels required when called:    2
   180 ;; This function calls:
   181 ;;		_flag_time
   182 ;;		_init_timer
   183 ;;		_set_clock
   184 ;;		_set_port
   185 ;;		_set_timer
   186 ;;		_toggle_c
   187 ;;		_toggle_d
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text0
   194  007B1A                     __ptext0:
   195                           	opt stack 0
   196  007B1A                     _main:
   197                           	opt stack 29
   198                           
   199                           ;main.c: 32: set_clock();
   200                           
   201                           ;incstack = 0
   202  007B1A  EC35  F03D         	call	_set_clock	;wreg free
   203                           
   204                           ;main.c: 33: set_timer(10, 1);
   205  007B1E  0E0A               	movlw	10
   206  007B20  6E1A               	movwf	set_timer@time,c
   207  007B22  0E00               	movlw	0
   208  007B24  6E1B               	movwf	set_timer@time+1,c
   209  007B26  0E00               	movlw	0
   210  007B28  6E1C               	movwf	set_timer@time+2,c
   211  007B2A  0E00               	movlw	0
   212  007B2C  6E1D               	movwf	set_timer@time+3,c
   213  007B2E  0E01               	movlw	1
   214  007B30  6E1E               	movwf	set_timer@unidad,c
   215  007B32  ECFB  F03D         	call	_set_timer	;wreg free
   216                           
   217                           ;main.c: 34: init_timer(1);
   218  007B36  0E01               	movlw	1
   219  007B38  EC3E  F03D         	call	_init_timer
   220                           
   221                           ;main.c: 35: set_port();
   222  007B3C  EC45  F03D         	call	_set_port	;wreg free
   223  007B40                     l1089:
   224                           
   225                           ;main.c: 37: if (flag_time()){
   226  007B40  EC56  F03D         	call	_flag_time	;wreg free
   227  007B44  0900               	iorlw	0
   228  007B46  B4D8               	btfsc	status,2,c
   229  007B48  D004               	goto	l44
   230                           
   231                           ;main.c: 38: flag_d=flag_d+1;
   232  007B4A  2824               	incf	_flag_d,w,c
   233  007B4C  6E24               	movwf	_flag_d,c
   234                           
   235                           ;main.c: 39: flag_c=flag_c+1;
   236  007B4E  2823               	incf	_flag_c,w,c
   237  007B50  6E23               	movwf	_flag_c,c
   238  007B52                     l44:
   239                           
   240                           ;main.c: 40: }
   241                           ;main.c: 42: if (flag_c==100){
   242  007B52  0E64               	movlw	100
   243  007B54  1823               	xorwf	_flag_c,w,c
   244  007B56  A4D8               	btfss	status,2,c
   245  007B58  D004               	goto	l1097
   246                           
   247                           ;main.c: 43: toggle_c();
   248  007B5A  EC31  F03D         	call	_toggle_c	;wreg free
   249                           
   250                           ;main.c: 44: flag_c=0;
   251  007B5E  0E00               	movlw	0
   252  007B60  6E23               	movwf	_flag_c,c
   253  007B62                     l1097:
   254                           
   255                           ;main.c: 45: }
   256                           ;main.c: 46: if (flag_d==50){
   257  007B62  0E32               	movlw	50
   258  007B64  1824               	xorwf	_flag_d,w,c
   259  007B66  A4D8               	btfss	status,2,c
   260  007B68  D7EB               	goto	l1089
   261                           
   262                           ;main.c: 47: toggle_d();
   263  007B6A  EC33  F03D         	call	_toggle_d	;wreg free
   264                           
   265                           ;main.c: 48: flag_d=0;
   266  007B6E  0E00               	movlw	0
   267  007B70  6E24               	movwf	_flag_d,c
   268  007B72  D7E6               	goto	l1089
   269  007B74                     __end_of_main:
   270                           	opt stack 0
   271                           tblptru	equ	0xFF8
   272                           status	equ	0xFD8
   273                           
   274 ;; *************** function _toggle_d *****************
   275 ;; Defined at:
   276 ;;		line 24 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;		None               void
   283 ;; Registers used:
   284 ;;		status,2, status,0
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   290 ;;      Params:         0       0       0       0       0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0       0       0       0       0
   293 ;;      Totals:         0       0       0       0       0       0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_main
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text1
   304  007A66                     __ptext1:
   305                           	opt stack 0
   306  007A66                     _toggle_d:
   307                           	opt stack 30
   308                           
   309                           ;main.c: 25: PORTD=~PORTD;
   310                           
   311                           ;incstack = 0
   312  007A66  1E83               	comf	3971,f,c	;volatile
   313  007A68  0012               	return		;funcret
   314  007A6A                     __end_of_toggle_d:
   315                           	opt stack 0
   316                           tblptru	equ	0xFF8
   317                           status	equ	0xFD8
   318                           
   319 ;; *************** function _toggle_c *****************
   320 ;; Defined at:
   321 ;;		line 28 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;		None               void
   328 ;; Registers used:
   329 ;;		status,2, status,0
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   335 ;;      Params:         0       0       0       0       0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0
   338 ;;      Totals:         0       0       0       0       0       0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels used:    1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text2
   349  007A62                     __ptext2:
   350                           	opt stack 0
   351  007A62                     _toggle_c:
   352                           	opt stack 30
   353                           
   354                           ;main.c: 29: PORTC=~PORTC;
   355                           
   356                           ;incstack = 0
   357  007A62  1E82               	comf	3970,f,c	;volatile
   358  007A64  0012               	return		;funcret
   359  007A66                     __end_of_toggle_c:
   360                           	opt stack 0
   361                           tblptru	equ	0xFF8
   362                           status	equ	0xFD8
   363                           
   364 ;; *************** function _set_timer *****************
   365 ;; Defined at:
   366 ;;		line 15 in file "timer_0.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;  time            4   25[COMRAM] unsigned long 
   369 ;;  unidad          1   29[COMRAM] unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  t               2   32[COMRAM] unsigned int 
   372 ;;  aux             2   30[COMRAM] unsigned int 
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   382 ;;      Params:         5       0       0       0       0       0       0       0       0
   383 ;;      Locals:         4       0       0       0       0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0       0       0
   385 ;;      Totals:         9       0       0       0       0       0       0       0       0
   386 ;;Total ram usage:        9 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    1
   389 ;; This function calls:
   390 ;;		___lldiv
   391 ;;		___lmul
   392 ;;		_set_time
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text3
   399  007BF6                     __ptext3:
   400                           	opt stack 0
   401  007BF6                     _set_timer:
   402                           	opt stack 29
   403                           
   404                           ;timer_0.c: 16: periodo=time;
   405                           
   406                           ;incstack = 0
   407  007BF6  C01A  F028         	movff	set_timer@time,_periodo
   408  007BFA  C01B  F029         	movff	set_timer@time+1,_periodo+1
   409  007BFE  C01C  F02A         	movff	set_timer@time+2,_periodo+2
   410  007C02  C01D  F02B         	movff	set_timer@time+3,_periodo+3
   411                           
   412                           ;timer_0.c: 17: u16 aux=65535;
   413  007C06  681F               	setf	set_timer@aux,c
   414  007C08  6820               	setf	set_timer@aux+1,c
   415                           
   416                           ;timer_0.c: 18: u16 t=2;
   417  007C0A  0E00               	movlw	0
   418  007C0C  6E22               	movwf	set_timer@t+1,c
   419  007C0E  0E02               	movlw	2
   420  007C10  6E21               	movwf	set_timer@t,c
   421                           
   422                           ;timer_0.c: 19: switch (unidad){
   423  007C12  D1E5               	goto	l1069
   424  007C14                     l959:
   425                           
   426                           ;timer_0.c: 21: if (periodo>=1 && periodo<65){
   427  007C14  5028               	movf	_periodo,w,c
   428  007C16  1029               	iorwf	_periodo+1,w,c
   429  007C18  102A               	iorwf	_periodo+2,w,c
   430  007C1A  102B               	iorwf	_periodo+3,w,c
   431  007C1C  B4D8               	btfsc	status,2,c
   432  007C1E  D00F               	goto	l967
   433  007C20  502B               	movf	_periodo+3,w,c
   434  007C22  102A               	iorwf	_periodo+2,w,c
   435  007C24  1029               	iorwf	_periodo+1,w,c
   436  007C26  E10B               	bnz	l967
   437  007C28  0E41               	movlw	65
   438  007C2A  5C28               	subwf	_periodo,w,c
   439  007C2C  B0D8               	btfsc	status,0,c
   440  007C2E  D007               	goto	l967
   441                           
   442                           ;timer_0.c: 22: T0CONbits.T0PS=0;
   443  007C30  90D5               	bcf	4053,0,c	;volatile
   444  007C32  92D5               	bcf	4053,1,c	;volatile
   445  007C34  94D5               	bcf	4053,2,c	;volatile
   446                           
   447                           ;timer_0.c: 23: t=1;
   448  007C36  0E00               	movlw	0
   449  007C38  6E22               	movwf	set_timer@t+1,c
   450  007C3A  0E01               	movlw	1
   451  007C3C  D0B1               	goto	L7
   452  007C3E                     l967:
   453                           
   454                           ;timer_0.c: 25: else if (periodo>=65 && periodo<131)
   455  007C3E  502B               	movf	_periodo+3,w,c
   456  007C40  102A               	iorwf	_periodo+2,w,c
   457  007C42  1029               	iorwf	_periodo+1,w,c
   458  007C44  E104               	bnz	u500
   459  007C46  0E41               	movlw	65
   460  007C48  5C28               	subwf	_periodo,w,c
   461  007C4A  A0D8               	btfss	status,0,c
   462  007C4C  D010               	goto	l973
   463  007C4E                     u500:
   464  007C4E  502B               	movf	_periodo+3,w,c
   465  007C50  102A               	iorwf	_periodo+2,w,c
   466  007C52  1029               	iorwf	_periodo+1,w,c
   467  007C54  E10C               	bnz	l973
   468  007C56  0E83               	movlw	131
   469  007C58  5C28               	subwf	_periodo,w,c
   470  007C5A  B0D8               	btfsc	status,0,c
   471  007C5C  D008               	goto	l973
   472                           
   473                           ;timer_0.c: 26: {
   474                           ;timer_0.c: 27: T0CONbits.T0PS=1;
   475  007C5E  50D5               	movf	4053,w,c	;volatile
   476  007C60  0BF8               	andlw	-8
   477  007C62  0901               	iorlw	1
   478  007C64  6ED5               	movwf	4053,c	;volatile
   479                           
   480                           ;timer_0.c: 28: t=2;
   481  007C66  0E00               	movlw	0
   482  007C68  6E22               	movwf	set_timer@t+1,c
   483  007C6A  0E02               	movlw	2
   484  007C6C  D099               	goto	L7
   485  007C6E                     l973:
   486                           
   487                           ;timer_0.c: 30: else if (periodo>=131 && periodo<262)
   488  007C6E  502B               	movf	_periodo+3,w,c
   489  007C70  102A               	iorwf	_periodo+2,w,c
   490  007C72  1029               	iorwf	_periodo+1,w,c
   491  007C74  E104               	bnz	u520
   492  007C76  0E83               	movlw	131
   493  007C78  5C28               	subwf	_periodo,w,c
   494  007C7A  A0D8               	btfss	status,0,c
   495  007C7C  D011               	goto	l979
   496  007C7E                     u520:
   497  007C7E  502B               	movf	_periodo+3,w,c
   498  007C80  102A               	iorwf	_periodo+2,w,c
   499  007C82  E10E               	bnz	l979
   500  007C84  0E06               	movlw	6
   501  007C86  5C28               	subwf	_periodo,w,c
   502  007C88  0E01               	movlw	1
   503  007C8A  5829               	subwfb	_periodo+1,w,c
   504  007C8C  B0D8               	btfsc	status,0,c
   505  007C8E  D008               	goto	l979
   506                           
   507                           ;timer_0.c: 31: {
   508                           ;timer_0.c: 32: T0CONbits.T0PS=2;
   509  007C90  50D5               	movf	4053,w,c	;volatile
   510  007C92  0BF8               	andlw	-8
   511  007C94  0902               	iorlw	2
   512  007C96  6ED5               	movwf	4053,c	;volatile
   513                           
   514                           ;timer_0.c: 33: t=4;
   515  007C98  0E00               	movlw	0
   516  007C9A  6E22               	movwf	set_timer@t+1,c
   517  007C9C  0E04               	movlw	4
   518  007C9E  D080               	goto	L7
   519  007CA0                     l979:
   520                           
   521                           ;timer_0.c: 35: else if (periodo>=262 && periodo<524)
   522  007CA0  502B               	movf	_periodo+3,w,c
   523  007CA2  102A               	iorwf	_periodo+2,w,c
   524  007CA4  E106               	bnz	u540
   525  007CA6  0E06               	movlw	6
   526  007CA8  5C28               	subwf	_periodo,w,c
   527  007CAA  0E01               	movlw	1
   528  007CAC  5829               	subwfb	_periodo+1,w,c
   529  007CAE  A0D8               	btfss	status,0,c
   530  007CB0  D011               	goto	l985
   531  007CB2                     u540:
   532  007CB2  502B               	movf	_periodo+3,w,c
   533  007CB4  102A               	iorwf	_periodo+2,w,c
   534  007CB6  E10E               	bnz	l985
   535  007CB8  0E0C               	movlw	12
   536  007CBA  5C28               	subwf	_periodo,w,c
   537  007CBC  0E02               	movlw	2
   538  007CBE  5829               	subwfb	_periodo+1,w,c
   539  007CC0  B0D8               	btfsc	status,0,c
   540  007CC2  D008               	goto	l985
   541                           
   542                           ;timer_0.c: 36: {
   543                           ;timer_0.c: 37: T0CONbits.T0PS=3;
   544  007CC4  50D5               	movf	4053,w,c	;volatile
   545  007CC6  0BF8               	andlw	-8
   546  007CC8  0903               	iorlw	3
   547  007CCA  6ED5               	movwf	4053,c	;volatile
   548                           
   549                           ;timer_0.c: 38: t=8;
   550  007CCC  0E00               	movlw	0
   551  007CCE  6E22               	movwf	set_timer@t+1,c
   552  007CD0  0E08               	movlw	8
   553  007CD2  D066               	goto	L7
   554  007CD4                     l985:
   555                           
   556                           ;timer_0.c: 40: else if (periodo>=524 && periodo<1040)
   557  007CD4  502B               	movf	_periodo+3,w,c
   558  007CD6  102A               	iorwf	_periodo+2,w,c
   559  007CD8  E106               	bnz	u560
   560  007CDA  0E0C               	movlw	12
   561  007CDC  5C28               	subwf	_periodo,w,c
   562  007CDE  0E02               	movlw	2
   563  007CE0  5829               	subwfb	_periodo+1,w,c
   564  007CE2  A0D8               	btfss	status,0,c
   565  007CE4  D011               	goto	l991
   566  007CE6                     u560:
   567  007CE6  502B               	movf	_periodo+3,w,c
   568  007CE8  102A               	iorwf	_periodo+2,w,c
   569  007CEA  E10E               	bnz	l991
   570  007CEC  0E10               	movlw	16
   571  007CEE  5C28               	subwf	_periodo,w,c
   572  007CF0  0E04               	movlw	4
   573  007CF2  5829               	subwfb	_periodo+1,w,c
   574  007CF4  B0D8               	btfsc	status,0,c
   575  007CF6  D008               	goto	l991
   576                           
   577                           ;timer_0.c: 41: {
   578                           ;timer_0.c: 42: T0CONbits.T0PS=4;
   579  007CF8  50D5               	movf	4053,w,c	;volatile
   580  007CFA  0BF8               	andlw	-8
   581  007CFC  0904               	iorlw	4
   582  007CFE  6ED5               	movwf	4053,c	;volatile
   583                           
   584                           ;timer_0.c: 43: t=16;
   585  007D00  0E00               	movlw	0
   586  007D02  6E22               	movwf	set_timer@t+1,c
   587  007D04  0E10               	movlw	16
   588  007D06  D04C               	goto	L7
   589  007D08                     l991:
   590                           
   591                           ;timer_0.c: 45: else if (periodo>=1040 && periodo<2090)
   592  007D08  502B               	movf	_periodo+3,w,c
   593  007D0A  102A               	iorwf	_periodo+2,w,c
   594  007D0C  E106               	bnz	u580
   595  007D0E  0E10               	movlw	16
   596  007D10  5C28               	subwf	_periodo,w,c
   597  007D12  0E04               	movlw	4
   598  007D14  5829               	subwfb	_periodo+1,w,c
   599  007D16  A0D8               	btfss	status,0,c
   600  007D18  D011               	goto	l997
   601  007D1A                     u580:
   602  007D1A  502B               	movf	_periodo+3,w,c
   603  007D1C  102A               	iorwf	_periodo+2,w,c
   604  007D1E  E10E               	bnz	l997
   605  007D20  0E2A               	movlw	42
   606  007D22  5C28               	subwf	_periodo,w,c
   607  007D24  0E08               	movlw	8
   608  007D26  5829               	subwfb	_periodo+1,w,c
   609  007D28  B0D8               	btfsc	status,0,c
   610  007D2A  D008               	goto	l997
   611                           
   612                           ;timer_0.c: 46: {
   613                           ;timer_0.c: 47: T0CONbits.T0PS=5;
   614  007D2C  50D5               	movf	4053,w,c	;volatile
   615  007D2E  0BF8               	andlw	-8
   616  007D30  0905               	iorlw	5
   617  007D32  6ED5               	movwf	4053,c	;volatile
   618                           
   619                           ;timer_0.c: 48: t=32;
   620  007D34  0E00               	movlw	0
   621  007D36  6E22               	movwf	set_timer@t+1,c
   622  007D38  0E20               	movlw	32
   623  007D3A  D032               	goto	L7
   624  007D3C                     l997:
   625                           
   626                           ;timer_0.c: 50: else if (periodo>=2090 && periodo<4190){
   627  007D3C  502B               	movf	_periodo+3,w,c
   628  007D3E  102A               	iorwf	_periodo+2,w,c
   629  007D40  E106               	bnz	u600
   630  007D42  0E2A               	movlw	42
   631  007D44  5C28               	subwf	_periodo,w,c
   632  007D46  0E08               	movlw	8
   633  007D48  5829               	subwfb	_periodo+1,w,c
   634  007D4A  A0D8               	btfss	status,0,c
   635  007D4C  D011               	goto	l1003
   636  007D4E                     u600:
   637  007D4E  502B               	movf	_periodo+3,w,c
   638  007D50  102A               	iorwf	_periodo+2,w,c
   639  007D52  E10E               	bnz	l1003
   640  007D54  0E5E               	movlw	94
   641  007D56  5C28               	subwf	_periodo,w,c
   642  007D58  0E10               	movlw	16
   643  007D5A  5829               	subwfb	_periodo+1,w,c
   644  007D5C  B0D8               	btfsc	status,0,c
   645  007D5E  D008               	goto	l1003
   646                           
   647                           ;timer_0.c: 51: T0CONbits.T0PS=6;
   648  007D60  50D5               	movf	4053,w,c	;volatile
   649  007D62  0BF8               	andlw	-8
   650  007D64  0906               	iorlw	6
   651  007D66  6ED5               	movwf	4053,c	;volatile
   652                           
   653                           ;timer_0.c: 52: t=64;
   654  007D68  0E00               	movlw	0
   655  007D6A  6E22               	movwf	set_timer@t+1,c
   656  007D6C  0E40               	movlw	64
   657  007D6E  D018               	goto	L7
   658  007D70                     l1003:
   659                           
   660                           ;timer_0.c: 54: else if (periodo>=4190 && periodo<8380)
   661  007D70  502B               	movf	_periodo+3,w,c
   662  007D72  102A               	iorwf	_periodo+2,w,c
   663  007D74  E106               	bnz	u620
   664  007D76  0E5E               	movlw	94
   665  007D78  5C28               	subwf	_periodo,w,c
   666  007D7A  0E10               	movlw	16
   667  007D7C  5829               	subwfb	_periodo+1,w,c
   668  007D7E  A0D8               	btfss	status,0,c
   669  007D80  D010               	goto	l1011
   670  007D82                     u620:
   671  007D82  502B               	movf	_periodo+3,w,c
   672  007D84  102A               	iorwf	_periodo+2,w,c
   673  007D86  E10D               	bnz	l1011
   674  007D88  0EBC               	movlw	188
   675  007D8A  5C28               	subwf	_periodo,w,c
   676  007D8C  0E20               	movlw	32
   677  007D8E  5829               	subwfb	_periodo+1,w,c
   678  007D90  B0D8               	btfsc	status,0,c
   679  007D92  D007               	goto	l1011
   680                           
   681                           ;timer_0.c: 55: {
   682                           ;timer_0.c: 56: T0CONbits.T0PS=7;
   683  007D94  80D5               	bsf	4053,0,c	;volatile
   684  007D96  82D5               	bsf	4053,1,c	;volatile
   685  007D98  84D5               	bsf	4053,2,c	;volatile
   686                           
   687                           ;timer_0.c: 57: t=128;
   688  007D9A  0E00               	movlw	0
   689  007D9C  6E22               	movwf	set_timer@t+1,c
   690  007D9E  0E80               	movlw	128
   691  007DA0                     L7:
   692  007DA0  6E21               	movwf	set_timer@t,c
   693  007DA2                     l1011:
   694                           
   695                           ;timer_0.c: 58: }
   696                           ;timer_0.c: 60: aux=aux-(((1000*periodo)-2)/t);
   697  007DA2  C028  F001         	movff	_periodo,___lmul@multiplier
   698  007DA6  C029  F002         	movff	_periodo+1,___lmul@multiplier+1
   699  007DAA  C02A  F003         	movff	_periodo+2,___lmul@multiplier+2
   700  007DAE  C02B  F004         	movff	_periodo+3,___lmul@multiplier+3
   701  007DB2  0EE8               	movlw	232
   702  007DB4  6E05               	movwf	___lmul@multiplicand,c
   703  007DB6  0E03               	movlw	3
   704  007DB8  6E06               	movwf	___lmul@multiplicand+1,c
   705  007DBA  0E00               	movlw	0
   706  007DBC  6E07               	movwf	___lmul@multiplicand+2,c
   707  007DBE  0E00               	movlw	0
   708  007DC0  6E08               	movwf	___lmul@multiplicand+3,c
   709  007DC2  EC62  F03D         	call	___lmul	;wreg free
   710  007DC6  0EFE               	movlw	254
   711  007DC8  2401               	addwf	?___lmul,w,c
   712  007DCA  6E0D               	movwf	___lldiv@dividend,c
   713  007DCC  0EFF               	movlw	255
   714  007DCE  2002               	addwfc	?___lmul+1,w,c
   715  007DD0  6E0E               	movwf	___lldiv@dividend+1,c
   716  007DD2  0EFF               	movlw	255
   717  007DD4  2003               	addwfc	?___lmul+2,w,c
   718  007DD6  6E0F               	movwf	___lldiv@dividend+2,c
   719  007DD8  0EFF               	movlw	255
   720  007DDA  2004               	addwfc	?___lmul+3,w,c
   721  007DDC  6E10               	movwf	___lldiv@dividend+3,c
   722  007DDE  C021  F011         	movff	set_timer@t,___lldiv@divisor
   723  007DE2  C022  F012         	movff	set_timer@t+1,___lldiv@divisor+1
   724  007DE6  6A13               	clrf	___lldiv@divisor+2,c
   725  007DE8  6A14               	clrf	___lldiv@divisor+3,c
   726  007DEA  ECBA  F03D         	call	___lldiv	;wreg free
   727  007DEE  D0EC               	goto	L8
   728  007DF0                     l1013:
   729                           
   730                           ;timer_0.c: 64: if (periodo>=1 && periodo<65000){
   731  007DF0  5028               	movf	_periodo,w,c
   732  007DF2  1029               	iorwf	_periodo+1,w,c
   733  007DF4  102A               	iorwf	_periodo+2,w,c
   734  007DF6  102B               	iorwf	_periodo+3,w,c
   735  007DF8  B4D8               	btfsc	status,2,c
   736  007DFA  D010               	goto	l1021
   737  007DFC  502B               	movf	_periodo+3,w,c
   738  007DFE  102A               	iorwf	_periodo+2,w,c
   739  007E00  E10D               	bnz	l1021
   740  007E02  0EE8               	movlw	232
   741  007E04  5C28               	subwf	_periodo,w,c
   742  007E06  0EFD               	movlw	253
   743  007E08  5829               	subwfb	_periodo+1,w,c
   744  007E0A  B0D8               	btfsc	status,0,c
   745  007E0C  D007               	goto	l1021
   746                           
   747                           ;timer_0.c: 65: T0CONbits.T0PS=0;
   748  007E0E  90D5               	bcf	4053,0,c	;volatile
   749  007E10  92D5               	bcf	4053,1,c	;volatile
   750  007E12  94D5               	bcf	4053,2,c	;volatile
   751                           
   752                           ;timer_0.c: 66: t=1;
   753  007E14  0E00               	movlw	0
   754  007E16  6E22               	movwf	set_timer@t+1,c
   755  007E18  0E01               	movlw	1
   756  007E1A  D0C1               	goto	L15
   757  007E1C                     l1021:
   758                           
   759                           ;timer_0.c: 68: else if (periodo>=65000 && periodo<131000){
   760  007E1C  502B               	movf	_periodo+3,w,c
   761  007E1E  102A               	iorwf	_periodo+2,w,c
   762  007E20  E106               	bnz	u660
   763  007E22  0EE8               	movlw	232
   764  007E24  5C28               	subwf	_periodo,w,c
   765  007E26  0EFD               	movlw	253
   766  007E28  5829               	subwfb	_periodo+1,w,c
   767  007E2A  A0D8               	btfss	status,0,c
   768  007E2C  D012               	goto	l1027
   769  007E2E                     u660:
   770  007E2E  502B               	movf	_periodo+3,w,c
   771  007E30  E110               	bnz	l1027
   772  007E32  0EB8               	movlw	184
   773  007E34  5C28               	subwf	_periodo,w,c
   774  007E36  0EFF               	movlw	255
   775  007E38  5829               	subwfb	_periodo+1,w,c
   776  007E3A  0E01               	movlw	1
   777  007E3C  582A               	subwfb	_periodo+2,w,c
   778  007E3E  B0D8               	btfsc	status,0,c
   779  007E40  D008               	goto	l1027
   780                           
   781                           ;timer_0.c: 69: T0CONbits.T0PS=1;
   782  007E42  50D5               	movf	4053,w,c	;volatile
   783  007E44  0BF8               	andlw	-8
   784  007E46  0901               	iorlw	1
   785  007E48  6ED5               	movwf	4053,c	;volatile
   786                           
   787                           ;timer_0.c: 70: t=2;
   788  007E4A  0E00               	movlw	0
   789  007E4C  6E22               	movwf	set_timer@t+1,c
   790  007E4E  0E02               	movlw	2
   791  007E50  D0A6               	goto	L15
   792  007E52                     l1027:
   793                           
   794                           ;timer_0.c: 72: else if (periodo>=131000 && periodo<262000){
   795  007E52  502B               	movf	_periodo+3,w,c
   796  007E54  E108               	bnz	u680
   797  007E56  0EB8               	movlw	184
   798  007E58  5C28               	subwf	_periodo,w,c
   799  007E5A  0EFF               	movlw	255
   800  007E5C  5829               	subwfb	_periodo+1,w,c
   801  007E5E  0E01               	movlw	1
   802  007E60  582A               	subwfb	_periodo+2,w,c
   803  007E62  A0D8               	btfss	status,0,c
   804  007E64  D012               	goto	l1033
   805  007E66                     u680:
   806  007E66  502B               	movf	_periodo+3,w,c
   807  007E68  E110               	bnz	l1033
   808  007E6A  0E70               	movlw	112
   809  007E6C  5C28               	subwf	_periodo,w,c
   810  007E6E  0EFF               	movlw	255
   811  007E70  5829               	subwfb	_periodo+1,w,c
   812  007E72  0E03               	movlw	3
   813  007E74  582A               	subwfb	_periodo+2,w,c
   814  007E76  B0D8               	btfsc	status,0,c
   815  007E78  D008               	goto	l1033
   816                           
   817                           ;timer_0.c: 73: T0CONbits.T0PS=2;
   818  007E7A  50D5               	movf	4053,w,c	;volatile
   819  007E7C  0BF8               	andlw	-8
   820  007E7E  0902               	iorlw	2
   821  007E80  6ED5               	movwf	4053,c	;volatile
   822                           
   823                           ;timer_0.c: 74: t=4;
   824  007E82  0E00               	movlw	0
   825  007E84  6E22               	movwf	set_timer@t+1,c
   826  007E86  0E04               	movlw	4
   827  007E88  D08A               	goto	L15
   828  007E8A                     l1033:
   829                           
   830                           ;timer_0.c: 76: else if (periodo>=262000 && periodo<524000){
   831  007E8A  502B               	movf	_periodo+3,w,c
   832  007E8C  E108               	bnz	u700
   833  007E8E  0E70               	movlw	112
   834  007E90  5C28               	subwf	_periodo,w,c
   835  007E92  0EFF               	movlw	255
   836  007E94  5829               	subwfb	_periodo+1,w,c
   837  007E96  0E03               	movlw	3
   838  007E98  582A               	subwfb	_periodo+2,w,c
   839  007E9A  A0D8               	btfss	status,0,c
   840  007E9C  D012               	goto	l1039
   841  007E9E                     u700:
   842  007E9E  502B               	movf	_periodo+3,w,c
   843  007EA0  E110               	bnz	l1039
   844  007EA2  0EE0               	movlw	224
   845  007EA4  5C28               	subwf	_periodo,w,c
   846  007EA6  0EFE               	movlw	254
   847  007EA8  5829               	subwfb	_periodo+1,w,c
   848  007EAA  0E07               	movlw	7
   849  007EAC  582A               	subwfb	_periodo+2,w,c
   850  007EAE  B0D8               	btfsc	status,0,c
   851  007EB0  D008               	goto	l1039
   852                           
   853                           ;timer_0.c: 77: T0CONbits.T0PS=3;
   854  007EB2  50D5               	movf	4053,w,c	;volatile
   855  007EB4  0BF8               	andlw	-8
   856  007EB6  0903               	iorlw	3
   857  007EB8  6ED5               	movwf	4053,c	;volatile
   858                           
   859                           ;timer_0.c: 78: t=8;
   860  007EBA  0E00               	movlw	0
   861  007EBC  6E22               	movwf	set_timer@t+1,c
   862  007EBE  0E08               	movlw	8
   863  007EC0  D06E               	goto	L15
   864  007EC2                     l1039:
   865                           
   866                           ;timer_0.c: 80: else if (periodo>=524000 && periodo<1040000){
   867  007EC2  502B               	movf	_periodo+3,w,c
   868  007EC4  E108               	bnz	u720
   869  007EC6  0EE0               	movlw	224
   870  007EC8  5C28               	subwf	_periodo,w,c
   871  007ECA  0EFE               	movlw	254
   872  007ECC  5829               	subwfb	_periodo+1,w,c
   873  007ECE  0E07               	movlw	7
   874  007ED0  582A               	subwfb	_periodo+2,w,c
   875  007ED2  A0D8               	btfss	status,0,c
   876  007ED4  D012               	goto	l1045
   877  007ED6                     u720:
   878  007ED6  502B               	movf	_periodo+3,w,c
   879  007ED8  E110               	bnz	l1045
   880  007EDA  0E80               	movlw	128
   881  007EDC  5C28               	subwf	_periodo,w,c
   882  007EDE  0EDE               	movlw	222
   883  007EE0  5829               	subwfb	_periodo+1,w,c
   884  007EE2  0E0F               	movlw	15
   885  007EE4  582A               	subwfb	_periodo+2,w,c
   886  007EE6  B0D8               	btfsc	status,0,c
   887  007EE8  D008               	goto	l1045
   888                           
   889                           ;timer_0.c: 81: T0CONbits.T0PS=4;
   890  007EEA  50D5               	movf	4053,w,c	;volatile
   891  007EEC  0BF8               	andlw	-8
   892  007EEE  0904               	iorlw	4
   893  007EF0  6ED5               	movwf	4053,c	;volatile
   894                           
   895                           ;timer_0.c: 82: t=16;
   896  007EF2  0E00               	movlw	0
   897  007EF4  6E22               	movwf	set_timer@t+1,c
   898  007EF6  0E10               	movlw	16
   899  007EF8  D052               	goto	L15
   900  007EFA                     l1045:
   901                           
   902                           ;timer_0.c: 84: else if (periodo>=1040000 && periodo<2090000){
   903  007EFA  502B               	movf	_periodo+3,w,c
   904  007EFC  E108               	bnz	u740
   905  007EFE  0E80               	movlw	128
   906  007F00  5C28               	subwf	_periodo,w,c
   907  007F02  0EDE               	movlw	222
   908  007F04  5829               	subwfb	_periodo+1,w,c
   909  007F06  0E0F               	movlw	15
   910  007F08  582A               	subwfb	_periodo+2,w,c
   911  007F0A  A0D8               	btfss	status,0,c
   912  007F0C  D012               	goto	l1051
   913  007F0E                     u740:
   914  007F0E  502B               	movf	_periodo+3,w,c
   915  007F10  E110               	bnz	l1051
   916  007F12  0E10               	movlw	16
   917  007F14  5C28               	subwf	_periodo,w,c
   918  007F16  0EE4               	movlw	228
   919  007F18  5829               	subwfb	_periodo+1,w,c
   920  007F1A  0E1F               	movlw	31
   921  007F1C  582A               	subwfb	_periodo+2,w,c
   922  007F1E  B0D8               	btfsc	status,0,c
   923  007F20  D008               	goto	l1051
   924                           
   925                           ;timer_0.c: 85: T0CONbits.T0PS=5;
   926  007F22  50D5               	movf	4053,w,c	;volatile
   927  007F24  0BF8               	andlw	-8
   928  007F26  0905               	iorlw	5
   929  007F28  6ED5               	movwf	4053,c	;volatile
   930                           
   931                           ;timer_0.c: 86: t=32;
   932  007F2A  0E00               	movlw	0
   933  007F2C  6E22               	movwf	set_timer@t+1,c
   934  007F2E  0E20               	movlw	32
   935  007F30  D036               	goto	L15
   936  007F32                     l1051:
   937                           
   938                           ;timer_0.c: 88: else if (periodo>=2090000 && periodo<4190000){
   939  007F32  502B               	movf	_periodo+3,w,c
   940  007F34  E108               	bnz	u760
   941  007F36  0E10               	movlw	16
   942  007F38  5C28               	subwf	_periodo,w,c
   943  007F3A  0EE4               	movlw	228
   944  007F3C  5829               	subwfb	_periodo+1,w,c
   945  007F3E  0E1F               	movlw	31
   946  007F40  582A               	subwfb	_periodo+2,w,c
   947  007F42  A0D8               	btfss	status,0,c
   948  007F44  D012               	goto	l1057
   949  007F46                     u760:
   950  007F46  502B               	movf	_periodo+3,w,c
   951  007F48  E110               	bnz	l1057
   952  007F4A  0E30               	movlw	48
   953  007F4C  5C28               	subwf	_periodo,w,c
   954  007F4E  0EEF               	movlw	239
   955  007F50  5829               	subwfb	_periodo+1,w,c
   956  007F52  0E3F               	movlw	63
   957  007F54  582A               	subwfb	_periodo+2,w,c
   958  007F56  B0D8               	btfsc	status,0,c
   959  007F58  D008               	goto	l1057
   960                           
   961                           ;timer_0.c: 89: T0CONbits.T0PS=6;
   962  007F5A  50D5               	movf	4053,w,c	;volatile
   963  007F5C  0BF8               	andlw	-8
   964  007F5E  0906               	iorlw	6
   965  007F60  6ED5               	movwf	4053,c	;volatile
   966                           
   967                           ;timer_0.c: 90: t=64;
   968  007F62  0E00               	movlw	0
   969  007F64  6E22               	movwf	set_timer@t+1,c
   970  007F66  0E40               	movlw	64
   971  007F68  D01A               	goto	L15
   972  007F6A                     l1057:
   973                           
   974                           ;timer_0.c: 92: else if (periodo>=4190000 && periodo<8380000){
   975  007F6A  502B               	movf	_periodo+3,w,c
   976  007F6C  E108               	bnz	u780
   977  007F6E  0E30               	movlw	48
   978  007F70  5C28               	subwf	_periodo,w,c
   979  007F72  0EEF               	movlw	239
   980  007F74  5829               	subwfb	_periodo+1,w,c
   981  007F76  0E3F               	movlw	63
   982  007F78  582A               	subwfb	_periodo+2,w,c
   983  007F7A  A0D8               	btfss	status,0,c
   984  007F7C  D011               	goto	l1065
   985  007F7E                     u780:
   986  007F7E  502B               	movf	_periodo+3,w,c
   987  007F80  E10F               	bnz	l1065
   988  007F82  0E60               	movlw	96
   989  007F84  5C28               	subwf	_periodo,w,c
   990  007F86  0EDE               	movlw	222
   991  007F88  5829               	subwfb	_periodo+1,w,c
   992  007F8A  0E7F               	movlw	127
   993  007F8C  582A               	subwfb	_periodo+2,w,c
   994  007F8E  B0D8               	btfsc	status,0,c
   995  007F90  D007               	goto	l1065
   996                           
   997                           ;timer_0.c: 93: T0CONbits.T0PS=7;
   998  007F92  80D5               	bsf	4053,0,c	;volatile
   999  007F94  82D5               	bsf	4053,1,c	;volatile
  1000  007F96  84D5               	bsf	4053,2,c	;volatile
  1001                           
  1002                           ;timer_0.c: 94: t=128;
  1003  007F98  0E00               	movlw	0
  1004  007F9A  6E22               	movwf	set_timer@t+1,c
  1005  007F9C  0E80               	movlw	128
  1006  007F9E                     L15:
  1007  007F9E  6E21               	movwf	set_timer@t,c
  1008  007FA0                     l1065:
  1009                           
  1010                           ;timer_0.c: 95: }
  1011                           ;timer_0.c: 96: aux=aux-((periodo-2)/t);
  1012  007FA0  0EFE               	movlw	254
  1013  007FA2  2428               	addwf	_periodo,w,c
  1014  007FA4  6E0D               	movwf	___lldiv@dividend,c
  1015  007FA6  0EFF               	movlw	255
  1016  007FA8  2029               	addwfc	_periodo+1,w,c
  1017  007FAA  6E0E               	movwf	___lldiv@dividend+1,c
  1018  007FAC  0EFF               	movlw	255
  1019  007FAE  202A               	addwfc	_periodo+2,w,c
  1020  007FB0  6E0F               	movwf	___lldiv@dividend+2,c
  1021  007FB2  0EFF               	movlw	255
  1022  007FB4  202B               	addwfc	_periodo+3,w,c
  1023  007FB6  6E10               	movwf	___lldiv@dividend+3,c
  1024  007FB8  C021  F011         	movff	set_timer@t,___lldiv@divisor
  1025  007FBC  C022  F012         	movff	set_timer@t+1,___lldiv@divisor+1
  1026  007FC0  6A13               	clrf	___lldiv@divisor+2,c
  1027  007FC2  6A14               	clrf	___lldiv@divisor+3,c
  1028  007FC4  ECBA  F03D         	call	___lldiv	;wreg free
  1029  007FC8                     L8:
  1030  007FC8  1E0D               	comf	?___lldiv,f,c
  1031  007FCA  1E0E               	comf	?___lldiv+1,f,c
  1032  007FCC  4A0D               	infsnz	?___lldiv,f,c
  1033  007FCE  2A0E               	incf	?___lldiv+1,f,c
  1034  007FD0  501F               	movf	set_timer@aux,w,c
  1035  007FD2  240D               	addwf	?___lldiv,w,c
  1036  007FD4  6E1F               	movwf	set_timer@aux,c
  1037  007FD6  5020               	movf	set_timer@aux+1,w,c
  1038  007FD8  200E               	addwfc	?___lldiv+1,w,c
  1039  007FDA  6E20               	movwf	set_timer@aux+1,c
  1040                           
  1041                           ;timer_0.c: 99: }
  1042                           ;timer_0.c: 100: }
  1043                           
  1044                           ;timer_0.c: 97: break;
  1045  007FDC  D007               	goto	l85
  1046  007FDE                     l1069:
  1047  007FDE  501E               	movf	set_timer@unidad,w,c
  1048                           
  1049                           ; Switch size 1, requested type "space"
  1050                           ; Number of cases is 2, Range of values is 0 to 1
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte            7     4 (average)
  1054                           ;	Chosen strategy is simple_byte
  1055  007FE0  0A00               	xorlw	0	; case 0
  1056  007FE2  B4D8               	btfsc	status,2,c
  1057  007FE4  D705               	goto	l1013
  1058  007FE6  0A01               	xorlw	1	; case 1
  1059  007FE8  B4D8               	btfsc	status,2,c
  1060  007FEA  D614               	goto	l959
  1061  007FEC                     l85:
  1062                           
  1063                           ;timer_0.c: 101: tl=aux;
  1064  007FEC  C01F  F027         	movff	set_timer@aux,_tl
  1065                           
  1066                           ;timer_0.c: 102: th=aux>>8;
  1067  007FF0  5020               	movf	set_timer@aux+1,w,c
  1068  007FF2  6E26               	movwf	_th,c
  1069                           
  1070                           ;timer_0.c: 103: T0CONbits.T08BIT=0;
  1071  007FF4  9CD5               	bcf	4053,6,c	;volatile
  1072                           
  1073                           ;timer_0.c: 104: T0CONbits.PSA=0;
  1074  007FF6  96D5               	bcf	4053,3,c	;volatile
  1075                           
  1076                           ;timer_0.c: 105: T0CONbits.T0CS=0;
  1077  007FF8  9AD5               	bcf	4053,5,c	;volatile
  1078                           
  1079                           ;timer_0.c: 106: set_time();
  1080  007FFA  EC39  F03D         	call	_set_time	;wreg free
  1081  007FFE  0012               	return		;funcret
  1082  008000                     __end_of_set_timer:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function ___lmul *****************
  1088 ;; Defined at:
  1089 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul32.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  multiplier      4    0[COMRAM] unsigned long 
  1092 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  product         4    8[COMRAM] unsigned long 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  4    0[COMRAM] unsigned long 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1104 ;;      Params:         8       0       0       0       0       0       0       0       0
  1105 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1107 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1108 ;;Total ram usage:       12 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_set_timer
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text4
  1118  007AC4                     __ptext4:
  1119                           	opt stack 0
  1120  007AC4                     ___lmul:
  1121                           	opt stack 29
  1122                           
  1123                           ;incstack = 0
  1124  007AC4  0E00               	movlw	0
  1125  007AC6  6E09               	movwf	___lmul@product,c
  1126  007AC8  0E00               	movlw	0
  1127  007ACA  6E0A               	movwf	___lmul@product+1,c
  1128  007ACC  0E00               	movlw	0
  1129  007ACE  6E0B               	movwf	___lmul@product+2,c
  1130  007AD0  0E00               	movlw	0
  1131  007AD2  6E0C               	movwf	___lmul@product+3,c
  1132  007AD4                     l925:
  1133  007AD4  A001               	btfss	___lmul@multiplier,0,c
  1134  007AD6  D008               	goto	l929
  1135  007AD8  5005               	movf	___lmul@multiplicand,w,c
  1136  007ADA  2609               	addwf	___lmul@product,f,c
  1137  007ADC  5006               	movf	___lmul@multiplicand+1,w,c
  1138  007ADE  220A               	addwfc	___lmul@product+1,f,c
  1139  007AE0  5007               	movf	___lmul@multiplicand+2,w,c
  1140  007AE2  220B               	addwfc	___lmul@product+2,f,c
  1141  007AE4  5008               	movf	___lmul@multiplicand+3,w,c
  1142  007AE6  220C               	addwfc	___lmul@product+3,f,c
  1143  007AE8                     l929:
  1144  007AE8  90D8               	bcf	status,0,c
  1145  007AEA  3605               	rlcf	___lmul@multiplicand,f,c
  1146  007AEC  3606               	rlcf	___lmul@multiplicand+1,f,c
  1147  007AEE  3607               	rlcf	___lmul@multiplicand+2,f,c
  1148  007AF0  3608               	rlcf	___lmul@multiplicand+3,f,c
  1149  007AF2  90D8               	bcf	status,0,c
  1150  007AF4  3204               	rrcf	___lmul@multiplier+3,f,c
  1151  007AF6  3203               	rrcf	___lmul@multiplier+2,f,c
  1152  007AF8  3202               	rrcf	___lmul@multiplier+1,f,c
  1153  007AFA  3201               	rrcf	___lmul@multiplier,f,c
  1154  007AFC  5001               	movf	___lmul@multiplier,w,c
  1155  007AFE  1002               	iorwf	___lmul@multiplier+1,w,c
  1156  007B00  1003               	iorwf	___lmul@multiplier+2,w,c
  1157  007B02  1004               	iorwf	___lmul@multiplier+3,w,c
  1158  007B04  A4D8               	btfss	status,2,c
  1159  007B06  D7E6               	goto	l925
  1160  007B08  C009  F001         	movff	___lmul@product,?___lmul
  1161  007B0C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1162  007B10  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1163  007B14  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1164  007B18  0012               	return		;funcret
  1165  007B1A                     __end_of___lmul:
  1166                           	opt stack 0
  1167                           tblptru	equ	0xFF8
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function ___lldiv *****************
  1171 ;; Defined at:
  1172 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/lldiv.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  dividend        4   12[COMRAM] unsigned long 
  1175 ;;  divisor         4   16[COMRAM] unsigned long 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  quotient        4   20[COMRAM] unsigned long 
  1178 ;;  counter         1   24[COMRAM] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  4   12[COMRAM] unsigned long 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1188 ;;      Params:         8       0       0       0       0       0       0       0       0
  1189 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1191 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1192 ;;Total ram usage:       13 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_set_timer
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text5
  1202  007B74                     __ptext5:
  1203                           	opt stack 0
  1204  007B74                     ___lldiv:
  1205                           	opt stack 29
  1206                           
  1207                           ;incstack = 0
  1208  007B74  0E00               	movlw	0
  1209  007B76  6E15               	movwf	___lldiv@quotient,c
  1210  007B78  0E00               	movlw	0
  1211  007B7A  6E16               	movwf	___lldiv@quotient+1,c
  1212  007B7C  0E00               	movlw	0
  1213  007B7E  6E17               	movwf	___lldiv@quotient+2,c
  1214  007B80  0E00               	movlw	0
  1215  007B82  6E18               	movwf	___lldiv@quotient+3,c
  1216  007B84  5011               	movf	___lldiv@divisor,w,c
  1217  007B86  1012               	iorwf	___lldiv@divisor+1,w,c
  1218  007B88  1013               	iorwf	___lldiv@divisor+2,w,c
  1219  007B8A  1014               	iorwf	___lldiv@divisor+3,w,c
  1220  007B8C  B4D8               	btfsc	status,2,c
  1221  007B8E  D02A               	goto	l463
  1222  007B90  0E01               	movlw	1
  1223  007B92  6E19               	movwf	___lldiv@counter,c
  1224  007B94  D006               	goto	l941
  1225  007B96                     l939:
  1226  007B96  90D8               	bcf	status,0,c
  1227  007B98  3611               	rlcf	___lldiv@divisor,f,c
  1228  007B9A  3612               	rlcf	___lldiv@divisor+1,f,c
  1229  007B9C  3613               	rlcf	___lldiv@divisor+2,f,c
  1230  007B9E  3614               	rlcf	___lldiv@divisor+3,f,c
  1231  007BA0  2A19               	incf	___lldiv@counter,f,c
  1232  007BA2                     l941:
  1233  007BA2  AE14               	btfss	___lldiv@divisor+3,7,c
  1234  007BA4  D7F8               	goto	l939
  1235  007BA6                     l943:
  1236  007BA6  90D8               	bcf	status,0,c
  1237  007BA8  3615               	rlcf	___lldiv@quotient,f,c
  1238  007BAA  3616               	rlcf	___lldiv@quotient+1,f,c
  1239  007BAC  3617               	rlcf	___lldiv@quotient+2,f,c
  1240  007BAE  3618               	rlcf	___lldiv@quotient+3,f,c
  1241  007BB0  5011               	movf	___lldiv@divisor,w,c
  1242  007BB2  5C0D               	subwf	___lldiv@dividend,w,c
  1243  007BB4  5012               	movf	___lldiv@divisor+1,w,c
  1244  007BB6  580E               	subwfb	___lldiv@dividend+1,w,c
  1245  007BB8  5013               	movf	___lldiv@divisor+2,w,c
  1246  007BBA  580F               	subwfb	___lldiv@dividend+2,w,c
  1247  007BBC  5014               	movf	___lldiv@divisor+3,w,c
  1248  007BBE  5810               	subwfb	___lldiv@dividend+3,w,c
  1249  007BC0  A0D8               	btfss	status,0,c
  1250  007BC2  D009               	goto	l951
  1251  007BC4  5011               	movf	___lldiv@divisor,w,c
  1252  007BC6  5E0D               	subwf	___lldiv@dividend,f,c
  1253  007BC8  5012               	movf	___lldiv@divisor+1,w,c
  1254  007BCA  5A0E               	subwfb	___lldiv@dividend+1,f,c
  1255  007BCC  5013               	movf	___lldiv@divisor+2,w,c
  1256  007BCE  5A0F               	subwfb	___lldiv@dividend+2,f,c
  1257  007BD0  5014               	movf	___lldiv@divisor+3,w,c
  1258  007BD2  5A10               	subwfb	___lldiv@dividend+3,f,c
  1259  007BD4  8015               	bsf	___lldiv@quotient,0,c
  1260  007BD6                     l951:
  1261  007BD6  90D8               	bcf	status,0,c
  1262  007BD8  3214               	rrcf	___lldiv@divisor+3,f,c
  1263  007BDA  3213               	rrcf	___lldiv@divisor+2,f,c
  1264  007BDC  3212               	rrcf	___lldiv@divisor+1,f,c
  1265  007BDE  3211               	rrcf	___lldiv@divisor,f,c
  1266  007BE0  2E19               	decfsz	___lldiv@counter,f,c
  1267  007BE2  D7E1               	goto	l943
  1268  007BE4                     l463:
  1269  007BE4  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  1270  007BE8  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  1271  007BEC  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  1272  007BF0  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  1273  007BF4  0012               	return		;funcret
  1274  007BF6                     __end_of___lldiv:
  1275                           	opt stack 0
  1276                           tblptru	equ	0xFF8
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function _set_port *****************
  1280 ;; Defined at:
  1281 ;;		line 14 in file "main.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;		None               void
  1288 ;; Registers used:
  1289 ;;		wreg, status,2
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1298 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text6
  1309  007A8A                     __ptext6:
  1310                           	opt stack 0
  1311  007A8A                     _set_port:
  1312                           	opt stack 30
  1313                           
  1314                           ;main.c: 15: TRISC=0;
  1315                           
  1316                           ;incstack = 0
  1317  007A8A  0E00               	movlw	0
  1318  007A8C  6E94               	movwf	3988,c	;volatile
  1319                           
  1320                           ;main.c: 16: TRISD=0;
  1321  007A8E  0E00               	movlw	0
  1322  007A90  6E95               	movwf	3989,c	;volatile
  1323                           
  1324                           ;main.c: 17: PORTC=255;
  1325  007A92  6882               	setf	3970,c	;volatile
  1326                           
  1327                           ;main.c: 18: PORTD=255;
  1328  007A94  6883               	setf	3971,c	;volatile
  1329  007A96  0012               	return		;funcret
  1330  007A98                     __end_of_set_port:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           status	equ	0xFD8
  1334                           
  1335 ;; *************** function _set_clock *****************
  1336 ;; Defined at:
  1337 ;;		line 20 in file "main.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;		None
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;		None               void
  1344 ;; Registers used:
  1345 ;;		None
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1355 ;;Total ram usage:        0 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text7
  1365  007A6A                     __ptext7:
  1366                           	opt stack 0
  1367  007A6A                     _set_clock:
  1368                           	opt stack 30
  1369                           
  1370                           ;main.c: 21: OSCCONbits.IRCF=7;
  1371                           
  1372                           ;incstack = 0
  1373  007A6A  88D3               	bsf	4051,4,c	;volatile
  1374  007A6C  8AD3               	bsf	4051,5,c	;volatile
  1375  007A6E  8CD3               	bsf	4051,6,c	;volatile
  1376  007A70  0012               	return		;funcret
  1377  007A72                     __end_of_set_clock:
  1378                           	opt stack 0
  1379                           tblptru	equ	0xFF8
  1380                           status	equ	0xFD8
  1381                           
  1382 ;; *************** function _flag_time *****************
  1383 ;; Defined at:
  1384 ;;		line 117 in file "timer_0.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      unsigned char 
  1391 ;; Registers used:
  1392 ;;		wreg, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    1
  1405 ;; This function calls:
  1406 ;;		_init_timer
  1407 ;;		_set_time
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text8
  1414  007AAC                     __ptext8:
  1415                           	opt stack 0
  1416  007AAC                     _flag_time:
  1417                           	opt stack 29
  1418                           
  1419                           ;timer_0.c: 118: if (INTCONbits.T0IF==1){
  1420                           
  1421                           ;incstack = 0
  1422  007AAC  A4F2               	btfss	intcon,2,c	;volatile
  1423  007AAE  D008               	goto	l897
  1424                           
  1425                           ;timer_0.c: 119: INTCONbits.T0IF=0;
  1426  007AB0  94F2               	bcf	intcon,2,c	;volatile
  1427                           
  1428                           ;timer_0.c: 120: set_time();
  1429  007AB2  EC39  F03D         	call	_set_time	;wreg free
  1430                           
  1431                           ;timer_0.c: 121: init_timer(1);
  1432  007AB6  0E01               	movlw	1
  1433  007AB8  EC3E  F03D         	call	_init_timer
  1434                           
  1435                           ;timer_0.c: 122: return 1;
  1436  007ABC  0E01               	movlw	1
  1437                           
  1438                           ;timer_0.c: 123: }
  1439  007ABE  0012               	return	
  1440  007AC0                     l897:
  1441                           
  1442                           ;timer_0.c: 124: else
  1443                           ;timer_0.c: 125: return 0;
  1444  007AC0  0E00               	movlw	0
  1445  007AC2  0012               	return	
  1446  007AC4                     __end_of_flag_time:
  1447                           	opt stack 0
  1448                           tblptru	equ	0xFF8
  1449                           intcon	equ	0xFF2
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function _set_time *****************
  1453 ;; Defined at:
  1454 ;;		line 109 in file "timer_0.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		None
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1468 ;;      Params:         0       0       0       0       0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1471 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_set_timer
  1478 ;;		_flag_time
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text9
  1483  007A72                     __ptext9:
  1484                           	opt stack 0
  1485  007A72                     _set_time:
  1486                           	opt stack 29
  1487                           
  1488                           ;timer_0.c: 110: TMR0H=th;
  1489                           
  1490                           ;incstack = 0
  1491  007A72  C026  FFD7         	movff	_th,4055	;volatile
  1492                           
  1493                           ;timer_0.c: 111: TMR0L=tl;
  1494  007A76  C027  FFD6         	movff	_tl,4054	;volatile
  1495  007A7A  0012               	return		;funcret
  1496  007A7C                     __end_of_set_time:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           intcon	equ	0xFF2
  1500                           status	equ	0xFD8
  1501                           
  1502 ;; *************** function _init_timer *****************
  1503 ;; Defined at:
  1504 ;;		line 113 in file "timer_0.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  state           1    wreg     unsigned char 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  state           1    0[COMRAM] unsigned char 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;		None               void
  1511 ;; Registers used:
  1512 ;;		wreg
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1518 ;;      Params:         0       0       0       0       0       0       0       0       0
  1519 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1521 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1522 ;;Total ram usage:        1 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;;		_flag_time
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text10
  1533  007A7C                     __ptext10:
  1534                           	opt stack 0
  1535  007A7C                     _init_timer:
  1536                           	opt stack 30
  1537                           
  1538                           ;incstack = 0
  1539                           ;init_timer@state stored from wreg
  1540  007A7C  6E01               	movwf	init_timer@state,c
  1541                           
  1542                           ;timer_0.c: 114: T0CONbits.TMR0ON=state;
  1543  007A7E  B001               	btfsc	init_timer@state,0,c
  1544  007A80  D002               	bra	u15
  1545  007A82  9ED5               	bcf	4053,7,c	;volatile
  1546  007A84  D001               	bra	u16
  1547  007A86                     u15:
  1548  007A86  8ED5               	bsf	4053,7,c	;volatile
  1549  007A88                     u16:
  1550  007A88  0012               	return		;funcret
  1551  007A8A                     __end_of_init_timer:
  1552                           	opt stack 0
  1553  0000                     tblptru	equ	0xFF8
  1554                           intcon	equ	0xFF2
  1555                           status	equ	0xFD8
  1556                           tblptru	equ	0xFF8
  1557                           intcon	equ	0xFF2
  1558                           status	equ	0xFD8
  1559                           
  1560                           	psect	rparam
  1561  0000                     tblptru	equ	0xFF8
  1562                           intcon	equ	0xFF2
  1563                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_set_timer
    _set_timer->___lldiv
    ___lldiv->___lmul
    _flag_time->_init_timer

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     884
                          _flag_time
                         _init_timer
                          _set_clock
                           _set_port
                          _set_timer
                           _toggle_c
                           _toggle_d
 ---------------------------------------------------------------------------------
 (1) _toggle_d                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _toggle_c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_timer                                            9     4      5     854
                                             25 COMRAM     9     4      5
                            ___lldiv
                             ___lmul
                           _set_time
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     238
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     334
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_port                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_clock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flag_time                                            0     0      0      15
                         _init_timer
                           _set_time
 ---------------------------------------------------------------------------------
 (2) _set_time                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _flag_time
     _init_timer
     _set_time
   _init_timer
   _set_clock
   _set_port
   _set_timer
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _set_time
   _toggle_c
   _toggle_d

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      2B       1       45.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      20        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed May 31 04:00:30 2017

                     l44 7B52                       l85 7FEC                       u15 7A86  
                     u16 7A88              __CFG_BOR$ON 000000                       _th 0026  
                     _tl 0027              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l463 7BE4                      l941 7BA2  
                    l925 7AD4                      l951 7BD6                      l943 7BA6  
                    l929 7AE8                      l939 7B96                      l973 7C6E  
                    l991 7D08                      l967 7C3E                      l959 7C14  
                    l897 7AC0                      l985 7CD4                      l979 7CA0  
                    l997 7D3C             __CFG_CPB$OFF 000000                      u500 7C4E  
                    u600 7D4E                      u520 7C7E             __CFG_CPD$OFF 000000  
                    u700 7E9E                      u620 7D82                      u540 7CB2  
                    u720 7ED6                      u560 7CE6                      u740 7F0E  
                    u660 7E2E                      u580 7D1A                      u760 7F46  
                    u680 7E66                      u780 7F7E             __CFG_WDT$OFF 000000  
                   l1003 7D70                     l1011 7DA2                     l1021 7E1C  
                   l1013 7DF0                     l1033 7E8A                     l1051 7F32  
                   l1027 7E52                     l1045 7EFA                     l1039 7EC2  
                   l1057 7F6A                     l1065 7FA0                     l1069 7FDE  
                   l1097 7B62                     l1089 7B40                     _main 7B1A  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000010            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001          __end_of___lldiv 7BF6                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTC 000F82                    _PORTD 000F83  
          __CFG_USBDIV$1 000000                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0005            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 7A98             __end_of_main 7B74                   ??_main 0023  
          __activetblptr 000002           __CFG_XINST$OFF 000000                   ___lmul 7AC4  
         __CFG_STVREN$ON 000000                ??___lldiv 0015                   _flag_c 0023  
                 _flag_d 0024                   _flag_p 0025         __end_of_set_time 7A7C  
       __end_of_set_port 7A98                   tblptru 000FF8         __end_of_toggle_c 7A66  
       __end_of_toggle_d 7A6A               __accesstop 0060  __end_of__initialization 7AA2  
          ___rparam_used 000001           __pcstackCOMRAM 0001          set_timer@unidad 001E  
     __size_of_flag_time 0018               __pnvCOMRAM 0028                  ?___lmul 0001  
         ___lmul@product 0009       __size_of_set_clock 0008       __size_of_set_timer 040A  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000        __end_of_flag_time 7AC4  
                __Lparam 0000                ?_set_time 0001                ?_set_port 0001  
        __size_of___lmul 0056                ?_toggle_c 0001                ?_toggle_d 0001  
                ___lldiv 7B74                  __pcinit 7A98               _init_timer 7A7C  
                __ramtop 0800                  __ptext0 7B1A                  __ptext1 7A66  
                __ptext2 7A62                  __ptext3 7BF6                  __ptext4 7AC4  
                __ptext5 7B74                  __ptext6 7A8A                  __ptext7 7A6A  
                __ptext8 7AAC                  __ptext9 7A72                _T0CONbits 000FD5  
                _periodo 0028     end_of_initialization 7AA2        __end_of_set_clock 7A72  
          __Lmediumconst 0000        __end_of_set_timer 8000          ___lldiv@divisor 0011  
        ___lldiv@counter 0019               ??_set_time 0001               ??_set_port 0001  
             ??_toggle_c 0001               ??_toggle_d 0001           __end_of___lmul 7B1A  
            ?_init_timer 0001      start_initialization 7A98                 ??___lmul 0009  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0023      __size_of_init_timer 000E  
               ?___lldiv 000D                _flag_time 7AAC        __size_of_set_time 000A  
      __size_of_set_port 000E        __size_of_toggle_c 0004        __size_of_toggle_d 0004  
        init_timer@state 0001               set_timer@t 0021                _set_clock 7A6A  
              _set_timer 7BF6         __CFG_WDTPS$32768 000000               ?_flag_time 0001  
      ___lmul@multiplier 0001                 __Hrparam 0000               ?_set_clock 0001  
               __Lrparam 0000               ?_set_timer 001A         __size_of___lldiv 0082  
           ??_init_timer 0001            set_timer@time 001A                 __ptext10 7A7C  
          __size_of_main 005A       __end_of_init_timer 7A8A                 _set_time 7A72  
               _set_port 7A8A                 _toggle_c 7A62                 _toggle_d 7A66  
            ??_flag_time 0002    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
           set_timer@aux 001F         ___lldiv@dividend 000D               _OSCCONbits 000FD3  
            ??_set_clock 0001              ??_set_timer 001F      __CFG_FOSC$INTOSC_EC 000000  
       ___lldiv@quotient 0015  
